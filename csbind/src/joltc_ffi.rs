/* automatically generated by csbindgen */

#[allow(unused)]
use ::std::os::raw::*;

use crate::joltc::*;


#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_Init(

) -> bool
{
    JPH_Init(

    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_Shutdown(

)
{
    JPH_Shutdown(

    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_SetTraceHandler(
    handler: JPH_TraceFunc
)
{
    JPH_SetTraceHandler(
        handler
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_SetAssertFailureHandler(
    handler: JPH_AssertFailureFunc
)
{
    JPH_SetAssertFailureHandler(
        handler
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_BroadPhaseLayerInterfaceMask_Create(
    numBroadPhaseLayers: u32
) -> *mut JPH_BroadPhaseLayerInterface
{
    JPH_BroadPhaseLayerInterfaceMask_Create(
        numBroadPhaseLayers
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_BroadPhaseLayerInterfaceMask_ConfigureLayer(
    bpInterface: *mut JPH_BroadPhaseLayerInterface,
    broadPhaseLayer: JPH_BroadPhaseLayer,
    groupsToInclude: u32,
    groupsToExclude: u32
)
{
    JPH_BroadPhaseLayerInterfaceMask_ConfigureLayer(
        bpInterface,
        broadPhaseLayer,
        groupsToInclude,
        groupsToExclude
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_BroadPhaseLayerInterfaceTable_Create(
    numObjectLayers: u32,
    numBroadPhaseLayers: u32
) -> *mut JPH_BroadPhaseLayerInterface
{
    JPH_BroadPhaseLayerInterfaceTable_Create(
        numObjectLayers,
        numBroadPhaseLayers
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_BroadPhaseLayerInterfaceTable_MapObjectToBroadPhaseLayer(
    bpInterface: *mut JPH_BroadPhaseLayerInterface,
    objectLayer: JPH_ObjectLayer,
    broadPhaseLayer: JPH_BroadPhaseLayer
)
{
    JPH_BroadPhaseLayerInterfaceTable_MapObjectToBroadPhaseLayer(
        bpInterface,
        objectLayer,
        broadPhaseLayer
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_ObjectLayerPairFilterMask_Create(

) -> *mut JPH_ObjectLayerPairFilter
{
    JPH_ObjectLayerPairFilterMask_Create(

    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_ObjectLayerPairFilterMask_GetObjectLayer(
    group: u32,
    mask: u32
) -> JPH_ObjectLayer
{
    JPH_ObjectLayerPairFilterMask_GetObjectLayer(
        group,
        mask
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_ObjectLayerPairFilterMask_GetGroup(
    layer: JPH_ObjectLayer
) -> u32
{
    JPH_ObjectLayerPairFilterMask_GetGroup(
        layer
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_ObjectLayerPairFilterMask_GetMask(
    layer: JPH_ObjectLayer
) -> u32
{
    JPH_ObjectLayerPairFilterMask_GetMask(
        layer
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_ObjectLayerPairFilterTable_Create(
    numObjectLayers: u32
) -> *mut JPH_ObjectLayerPairFilter
{
    JPH_ObjectLayerPairFilterTable_Create(
        numObjectLayers
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_ObjectLayerPairFilterTable_DisableCollision(
    objectFilter: *mut JPH_ObjectLayerPairFilter,
    layer1: JPH_ObjectLayer,
    layer2: JPH_ObjectLayer
)
{
    JPH_ObjectLayerPairFilterTable_DisableCollision(
        objectFilter,
        layer1,
        layer2
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_ObjectLayerPairFilterTable_EnableCollision(
    objectFilter: *mut JPH_ObjectLayerPairFilter,
    layer1: JPH_ObjectLayer,
    layer2: JPH_ObjectLayer
)
{
    JPH_ObjectLayerPairFilterTable_EnableCollision(
        objectFilter,
        layer1,
        layer2
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_ObjectLayerPairFilterTable_ShouldCollide(
    objectFilter: *mut JPH_ObjectLayerPairFilter,
    layer1: JPH_ObjectLayer,
    layer2: JPH_ObjectLayer
) -> bool
{
    JPH_ObjectLayerPairFilterTable_ShouldCollide(
        objectFilter,
        layer1,
        layer2
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_ObjectVsBroadPhaseLayerFilterMask_Create(
    broadPhaseLayerInterface: *const JPH_BroadPhaseLayerInterface
) -> *mut JPH_ObjectVsBroadPhaseLayerFilter
{
    JPH_ObjectVsBroadPhaseLayerFilterMask_Create(
        broadPhaseLayerInterface
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_ObjectVsBroadPhaseLayerFilterTable_Create(
    broadPhaseLayerInterface: *mut JPH_BroadPhaseLayerInterface,
    numBroadPhaseLayers: u32,
    objectLayerPairFilter: *mut JPH_ObjectLayerPairFilter,
    numObjectLayers: u32
) -> *mut JPH_ObjectVsBroadPhaseLayerFilter
{
    JPH_ObjectVsBroadPhaseLayerFilterTable_Create(
        broadPhaseLayerInterface,
        numBroadPhaseLayers,
        objectLayerPairFilter,
        numObjectLayers
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_DrawSettings_InitDefault(
    settings: *mut JPH_DrawSettings
)
{
    JPH_DrawSettings_InitDefault(
        settings
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_PhysicsSystem_Create(
    settings: *const JPH_PhysicsSystemSettings
) -> *mut JPH_PhysicsSystem
{
    JPH_PhysicsSystem_Create(
        settings
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_PhysicsSystem_Destroy(
    system: *mut JPH_PhysicsSystem
)
{
    JPH_PhysicsSystem_Destroy(
        system
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_PhysicsSystem_SetPhysicsSettings(
    system: *mut JPH_PhysicsSystem,
    settings: *mut JPH_PhysicsSettings
)
{
    JPH_PhysicsSystem_SetPhysicsSettings(
        system,
        settings
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_PhysicsSystem_GetPhysicsSettings(
    system: *mut JPH_PhysicsSystem,
    result: *mut JPH_PhysicsSettings
)
{
    JPH_PhysicsSystem_GetPhysicsSettings(
        system,
        result
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_PhysicsSystem_OptimizeBroadPhase(
    system: *mut JPH_PhysicsSystem
)
{
    JPH_PhysicsSystem_OptimizeBroadPhase(
        system
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_PhysicsSystem_Update(
    system: *mut JPH_PhysicsSystem,
    deltaTime: f32,
    collisionSteps: c_int
) -> JPH_PhysicsUpdateError
{
    JPH_PhysicsSystem_Update(
        system,
        deltaTime,
        collisionSteps
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_PhysicsSystem_Step(
    system: *mut JPH_PhysicsSystem,
    deltaTime: f32,
    collisionSteps: c_int
) -> JPH_PhysicsUpdateError
{
    JPH_PhysicsSystem_Step(
        system,
        deltaTime,
        collisionSteps
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_PhysicsSystem_GetBodyInterface(
    system: *mut JPH_PhysicsSystem
) -> *mut JPH_BodyInterface
{
    JPH_PhysicsSystem_GetBodyInterface(
        system
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_PhysicsSystem_GetBodyInterfaceNoLock(
    system: *mut JPH_PhysicsSystem
) -> *mut JPH_BodyInterface
{
    JPH_PhysicsSystem_GetBodyInterfaceNoLock(
        system
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_PhysicsSystem_GetBodyLockInterface(
    system: *const JPH_PhysicsSystem
) -> *const JPH_BodyLockInterface
{
    JPH_PhysicsSystem_GetBodyLockInterface(
        system
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_PhysicsSystem_GetBodyLockInterfaceNoLock(
    system: *const JPH_PhysicsSystem
) -> *const JPH_BodyLockInterface
{
    JPH_PhysicsSystem_GetBodyLockInterfaceNoLock(
        system
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_PhysicsSystem_GetBroadPhaseQuery(
    system: *const JPH_PhysicsSystem
) -> *const JPH_BroadPhaseQuery
{
    JPH_PhysicsSystem_GetBroadPhaseQuery(
        system
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_PhysicsSystem_GetNarrowPhaseQuery(
    system: *const JPH_PhysicsSystem
) -> *const JPH_NarrowPhaseQuery
{
    JPH_PhysicsSystem_GetNarrowPhaseQuery(
        system
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_PhysicsSystem_GetNarrowPhaseQueryNoLock(
    system: *const JPH_PhysicsSystem
) -> *const JPH_NarrowPhaseQuery
{
    JPH_PhysicsSystem_GetNarrowPhaseQueryNoLock(
        system
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_PhysicsSystem_SetContactListener(
    system: *mut JPH_PhysicsSystem,
    listener: *mut JPH_ContactListener
)
{
    JPH_PhysicsSystem_SetContactListener(
        system,
        listener
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_PhysicsSystem_SetBodyActivationListener(
    system: *mut JPH_PhysicsSystem,
    listener: *mut JPH_BodyActivationListener
)
{
    JPH_PhysicsSystem_SetBodyActivationListener(
        system,
        listener
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_PhysicsSystem_WereBodiesInContact(
    system: *const JPH_PhysicsSystem,
    body1: JPH_BodyID,
    body2: JPH_BodyID
) -> bool
{
    JPH_PhysicsSystem_WereBodiesInContact(
        system,
        body1,
        body2
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_PhysicsSystem_GetNumBodies(
    system: *const JPH_PhysicsSystem
) -> u32
{
    JPH_PhysicsSystem_GetNumBodies(
        system
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_PhysicsSystem_GetNumActiveBodies(
    system: *const JPH_PhysicsSystem,
    type_: JPH_BodyType
) -> u32
{
    JPH_PhysicsSystem_GetNumActiveBodies(
        system,
        type_
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_PhysicsSystem_GetMaxBodies(
    system: *const JPH_PhysicsSystem
) -> u32
{
    JPH_PhysicsSystem_GetMaxBodies(
        system
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_PhysicsSystem_GetNumConstraints(
    system: *const JPH_PhysicsSystem
) -> u32
{
    JPH_PhysicsSystem_GetNumConstraints(
        system
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_PhysicsSystem_SetGravity(
    system: *mut JPH_PhysicsSystem,
    value: *const JPH_Vec3
)
{
    JPH_PhysicsSystem_SetGravity(
        system,
        value
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_PhysicsSystem_GetGravity(
    system: *mut JPH_PhysicsSystem,
    result: *mut JPH_Vec3
)
{
    JPH_PhysicsSystem_GetGravity(
        system,
        result
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_PhysicsSystem_AddConstraint(
    system: *mut JPH_PhysicsSystem,
    constraint: *mut JPH_Constraint
)
{
    JPH_PhysicsSystem_AddConstraint(
        system,
        constraint
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_PhysicsSystem_RemoveConstraint(
    system: *mut JPH_PhysicsSystem,
    constraint: *mut JPH_Constraint
)
{
    JPH_PhysicsSystem_RemoveConstraint(
        system,
        constraint
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_PhysicsSystem_AddConstraints(
    system: *mut JPH_PhysicsSystem,
    constraints: *mut *mut JPH_Constraint,
    count: u32
)
{
    JPH_PhysicsSystem_AddConstraints(
        system,
        constraints,
        count
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_PhysicsSystem_RemoveConstraints(
    system: *mut JPH_PhysicsSystem,
    constraints: *mut *mut JPH_Constraint,
    count: u32
)
{
    JPH_PhysicsSystem_RemoveConstraints(
        system,
        constraints,
        count
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_PhysicsSystem_GetBodies(
    system: *const JPH_PhysicsSystem,
    ids: *mut JPH_BodyID,
    count: u32
)
{
    JPH_PhysicsSystem_GetBodies(
        system,
        ids,
        count
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_PhysicsSystem_GetConstraints(
    system: *const JPH_PhysicsSystem,
    constraints: *mut *const JPH_Constraint,
    count: u32
)
{
    JPH_PhysicsSystem_GetConstraints(
        system,
        constraints,
        count
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_PhysicsSystem_DrawBodies(
    system: *mut JPH_PhysicsSystem,
    settings: *const JPH_DrawSettings,
    renderer: *mut JPH_DebugRenderer,
    bodyFilter: *const JPH_BodyDrawFilter
)
{
    JPH_PhysicsSystem_DrawBodies(
        system,
        settings,
        renderer,
        bodyFilter
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_PhysicsSystem_DrawConstraints(
    system: *mut JPH_PhysicsSystem,
    renderer: *mut JPH_DebugRenderer
)
{
    JPH_PhysicsSystem_DrawConstraints(
        system,
        renderer
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_PhysicsSystem_DrawConstraintLimits(
    system: *mut JPH_PhysicsSystem,
    renderer: *mut JPH_DebugRenderer
)
{
    JPH_PhysicsSystem_DrawConstraintLimits(
        system,
        renderer
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_PhysicsSystem_DrawConstraintReferenceFrame(
    system: *mut JPH_PhysicsSystem,
    renderer: *mut JPH_DebugRenderer
)
{
    JPH_PhysicsSystem_DrawConstraintReferenceFrame(
        system,
        renderer
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_Quaternion_FromTo(
    from: *const JPH_Vec3,
    to: *const JPH_Vec3,
    quat: *mut JPH_Quat
)
{
    JPH_Quaternion_FromTo(
        from,
        to,
        quat
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_PhysicsMaterial_Create(

) -> *mut JPH_PhysicsMaterial
{
    JPH_PhysicsMaterial_Create(

    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_PhysicsMaterial_Destroy(
    material: *mut JPH_PhysicsMaterial
)
{
    JPH_PhysicsMaterial_Destroy(
        material
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_ShapeSettings_Destroy(
    settings: *mut JPH_ShapeSettings
)
{
    JPH_ShapeSettings_Destroy(
        settings
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_ShapeSettings_GetUserData(
    settings: *const JPH_ShapeSettings
) -> u64
{
    JPH_ShapeSettings_GetUserData(
        settings
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_ShapeSettings_SetUserData(
    settings: *mut JPH_ShapeSettings,
    userData: u64
)
{
    JPH_ShapeSettings_SetUserData(
        settings,
        userData
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_Shape_Destroy(
    shape: *mut JPH_Shape
)
{
    JPH_Shape_Destroy(
        shape
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_Shape_GetType(
    shape: *const JPH_Shape
) -> JPH_ShapeType
{
    JPH_Shape_GetType(
        shape
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_Shape_GetSubType(
    shape: *const JPH_Shape
) -> JPH_ShapeSubType
{
    JPH_Shape_GetSubType(
        shape
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_Shape_GetUserData(
    shape: *const JPH_Shape
) -> u64
{
    JPH_Shape_GetUserData(
        shape
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_Shape_SetUserData(
    shape: *mut JPH_Shape,
    userData: u64
)
{
    JPH_Shape_SetUserData(
        shape,
        userData
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_Shape_MustBeStatic(
    shape: *const JPH_Shape
) -> bool
{
    JPH_Shape_MustBeStatic(
        shape
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_Shape_GetCenterOfMass(
    shape: *const JPH_Shape,
    result: *mut JPH_Vec3
)
{
    JPH_Shape_GetCenterOfMass(
        shape,
        result
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_Shape_GetLocalBounds(
    shape: *const JPH_Shape,
    result: *mut JPH_AABox
)
{
    JPH_Shape_GetLocalBounds(
        shape,
        result
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_Shape_GetSubShapeIDBitsRecursive(
    shape: *const JPH_Shape
) -> u32
{
    JPH_Shape_GetSubShapeIDBitsRecursive(
        shape
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_Shape_GetWorldSpaceBounds(
    shape: *const JPH_Shape,
    centerOfMassTransform: *mut JPH_RMatrix4x4,
    scale: *mut JPH_Vec3,
    result: *mut JPH_AABox
)
{
    JPH_Shape_GetWorldSpaceBounds(
        shape,
        centerOfMassTransform,
        scale,
        result
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_Shape_GetInnerRadius(
    shape: *const JPH_Shape
) -> f32
{
    JPH_Shape_GetInnerRadius(
        shape
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_Shape_GetMassProperties(
    shape: *const JPH_Shape,
    result: *mut JPH_MassProperties
)
{
    JPH_Shape_GetMassProperties(
        shape,
        result
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_Shape_GetLeafShape(
    shape: *const JPH_Shape,
    subShapeID: JPH_SubShapeID,
    remainder: *mut JPH_SubShapeID
) -> *const JPH_Shape
{
    JPH_Shape_GetLeafShape(
        shape,
        subShapeID,
        remainder
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_Shape_GetMaterial(
    shape: *const JPH_Shape,
    subShapeID: JPH_SubShapeID
) -> *const JPH_PhysicsMaterial
{
    JPH_Shape_GetMaterial(
        shape,
        subShapeID
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_Shape_GetSurfaceNormal(
    shape: *const JPH_Shape,
    subShapeID: JPH_SubShapeID,
    localPosition: *mut JPH_Vec3,
    normal: *mut JPH_Vec3
)
{
    JPH_Shape_GetSurfaceNormal(
        shape,
        subShapeID,
        localPosition,
        normal
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_Shape_GetVolume(
    shape: *const JPH_Shape
) -> f32
{
    JPH_Shape_GetVolume(
        shape
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_Shape_CastRay(
    shape: *const JPH_Shape,
    origin: *const JPH_Vec3,
    direction: *const JPH_Vec3,
    hit: *mut JPH_RayCastResult
) -> bool
{
    JPH_Shape_CastRay(
        shape,
        origin,
        direction,
        hit
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_Shape_CastRay2(
    shape: *const JPH_Shape,
    origin: *const JPH_Vec3,
    direction: *const JPH_Vec3,
    rayCastSettings: *const JPH_RayCastSettings,
    collectorType: JPH_CollisionCollectorType,
    callback: JPH_CastRayResultCallback,
    userData: *mut c_void
) -> bool
{
    JPH_Shape_CastRay2(
        shape,
        origin,
        direction,
        rayCastSettings,
        collectorType,
        callback,
        userData
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_Shape_CollidePoint(
    shape: *const JPH_Shape,
    point: *const JPH_Vec3
) -> bool
{
    JPH_Shape_CollidePoint(
        shape,
        point
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_Shape_CollidePoint2(
    shape: *const JPH_Shape,
    point: *const JPH_Vec3,
    collectorType: JPH_CollisionCollectorType,
    callback: JPH_CollidePointResultCallback,
    userData: *mut c_void
) -> bool
{
    JPH_Shape_CollidePoint2(
        shape,
        point,
        collectorType,
        callback,
        userData
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_ConvexShapeSettings_GetDensity(
    shape: *const JPH_ConvexShapeSettings
) -> f32
{
    JPH_ConvexShapeSettings_GetDensity(
        shape
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_ConvexShapeSettings_SetDensity(
    shape: *mut JPH_ConvexShapeSettings,
    value: f32
)
{
    JPH_ConvexShapeSettings_SetDensity(
        shape,
        value
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_ConvexShape_GetDensity(
    shape: *const JPH_ConvexShape
) -> f32
{
    JPH_ConvexShape_GetDensity(
        shape
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_ConvexShape_SetDensity(
    shape: *mut JPH_ConvexShape,
    inDensity: f32
)
{
    JPH_ConvexShape_SetDensity(
        shape,
        inDensity
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_BoxShapeSettings_Create(
    halfExtent: *const JPH_Vec3,
    convexRadius: f32
) -> *mut JPH_BoxShapeSettings
{
    JPH_BoxShapeSettings_Create(
        halfExtent,
        convexRadius
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_BoxShapeSettings_CreateShape(
    settings: *const JPH_BoxShapeSettings
) -> *mut JPH_BoxShape
{
    JPH_BoxShapeSettings_CreateShape(
        settings
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_BoxShape_Create(
    halfExtent: *const JPH_Vec3,
    convexRadius: f32
) -> *mut JPH_BoxShape
{
    JPH_BoxShape_Create(
        halfExtent,
        convexRadius
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_BoxShape_GetHalfExtent(
    shape: *const JPH_BoxShape,
    halfExtent: *mut JPH_Vec3
)
{
    JPH_BoxShape_GetHalfExtent(
        shape,
        halfExtent
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_BoxShape_GetConvexRadius(
    shape: *const JPH_BoxShape
) -> f32
{
    JPH_BoxShape_GetConvexRadius(
        shape
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_SphereShapeSettings_Create(
    radius: f32
) -> *mut JPH_SphereShapeSettings
{
    JPH_SphereShapeSettings_Create(
        radius
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_SphereShapeSettings_CreateShape(
    settings: *const JPH_SphereShapeSettings
) -> *mut JPH_SphereShape
{
    JPH_SphereShapeSettings_CreateShape(
        settings
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_SphereShapeSettings_GetRadius(
    settings: *const JPH_SphereShapeSettings
) -> f32
{
    JPH_SphereShapeSettings_GetRadius(
        settings
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_SphereShapeSettings_SetRadius(
    settings: *mut JPH_SphereShapeSettings,
    radius: f32
)
{
    JPH_SphereShapeSettings_SetRadius(
        settings,
        radius
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_SphereShape_Create(
    radius: f32
) -> *mut JPH_SphereShape
{
    JPH_SphereShape_Create(
        radius
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_SphereShape_GetRadius(
    shape: *const JPH_SphereShape
) -> f32
{
    JPH_SphereShape_GetRadius(
        shape
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_PlaneShapeSettings_Create(
    plane: *const JPH_Plane,
    material: *const JPH_PhysicsMaterial,
    halfExtent: f32
) -> *mut JPH_PlaneShapeSettings
{
    JPH_PlaneShapeSettings_Create(
        plane,
        material,
        halfExtent
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_PlaneShapeSettings_CreateShape(
    settings: *const JPH_PlaneShapeSettings
) -> *mut JPH_PlaneShape
{
    JPH_PlaneShapeSettings_CreateShape(
        settings
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_PlaneShape_Create(
    plane: *const JPH_Plane,
    material: *const JPH_PhysicsMaterial,
    halfExtent: f32
) -> *mut JPH_PlaneShape
{
    JPH_PlaneShape_Create(
        plane,
        material,
        halfExtent
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_PlaneShape_GetPlane(
    shape: *const JPH_PlaneShape,
    result: *mut JPH_Plane
)
{
    JPH_PlaneShape_GetPlane(
        shape,
        result
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_PlaneShape_GetHalfExtent(
    shape: *const JPH_PlaneShape
) -> f32
{
    JPH_PlaneShape_GetHalfExtent(
        shape
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_TriangleShapeSettings_Create(
    v1: *const JPH_Vec3,
    v2: *const JPH_Vec3,
    v3: *const JPH_Vec3,
    convexRadius: f32
) -> *mut JPH_TriangleShapeSettings
{
    JPH_TriangleShapeSettings_Create(
        v1,
        v2,
        v3,
        convexRadius
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_TriangleShapeSettings_CreateShape(
    settings: *const JPH_TriangleShapeSettings
) -> *mut JPH_TriangleShape
{
    JPH_TriangleShapeSettings_CreateShape(
        settings
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_TriangleShape_Create(
    v1: *const JPH_Vec3,
    v2: *const JPH_Vec3,
    v3: *const JPH_Vec3,
    convexRadius: f32
) -> *mut JPH_TriangleShape
{
    JPH_TriangleShape_Create(
        v1,
        v2,
        v3,
        convexRadius
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_TriangleShape_GetConvexRadius(
    shape: *const JPH_TriangleShape
) -> f32
{
    JPH_TriangleShape_GetConvexRadius(
        shape
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_TriangleShape_GetVertex1(
    shape: *const JPH_TriangleShape,
    result: *mut JPH_Vec3
)
{
    JPH_TriangleShape_GetVertex1(
        shape,
        result
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_TriangleShape_GetVertex2(
    shape: *const JPH_TriangleShape,
    result: *mut JPH_Vec3
)
{
    JPH_TriangleShape_GetVertex2(
        shape,
        result
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_TriangleShape_GetVertex3(
    shape: *const JPH_TriangleShape,
    result: *mut JPH_Vec3
)
{
    JPH_TriangleShape_GetVertex3(
        shape,
        result
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_CapsuleShapeSettings_Create(
    halfHeightOfCylinder: f32,
    radius: f32
) -> *mut JPH_CapsuleShapeSettings
{
    JPH_CapsuleShapeSettings_Create(
        halfHeightOfCylinder,
        radius
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_CapsuleShapeSettings_CreateShape(
    settings: *const JPH_CapsuleShapeSettings
) -> *mut JPH_CapsuleShape
{
    JPH_CapsuleShapeSettings_CreateShape(
        settings
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_CapsuleShape_Create(
    halfHeightOfCylinder: f32,
    radius: f32
) -> *mut JPH_CapsuleShape
{
    JPH_CapsuleShape_Create(
        halfHeightOfCylinder,
        radius
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_CapsuleShape_GetRadius(
    shape: *const JPH_CapsuleShape
) -> f32
{
    JPH_CapsuleShape_GetRadius(
        shape
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_CapsuleShape_GetHalfHeightOfCylinder(
    shape: *const JPH_CapsuleShape
) -> f32
{
    JPH_CapsuleShape_GetHalfHeightOfCylinder(
        shape
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_CylinderShapeSettings_Create(
    halfHeight: f32,
    radius: f32,
    convexRadius: f32
) -> *mut JPH_CylinderShapeSettings
{
    JPH_CylinderShapeSettings_Create(
        halfHeight,
        radius,
        convexRadius
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_CylinderShapeSettings_CreateShape(
    settings: *const JPH_CylinderShapeSettings
) -> *mut JPH_CylinderShape
{
    JPH_CylinderShapeSettings_CreateShape(
        settings
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_CylinderShape_Create(
    halfHeight: f32,
    radius: f32
) -> *mut JPH_CylinderShape
{
    JPH_CylinderShape_Create(
        halfHeight,
        radius
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_CylinderShape_GetRadius(
    shape: *const JPH_CylinderShape
) -> f32
{
    JPH_CylinderShape_GetRadius(
        shape
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_CylinderShape_GetHalfHeight(
    shape: *const JPH_CylinderShape
) -> f32
{
    JPH_CylinderShape_GetHalfHeight(
        shape
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_TaperedCylinderShapeSettings_Create(
    halfHeightOfTaperedCylinder: f32,
    topRadius: f32,
    bottomRadius: f32,
    convexRadius: f32,
    material: *const JPH_PhysicsMaterial
) -> *mut JPH_TaperedCylinderShapeSettings
{
    JPH_TaperedCylinderShapeSettings_Create(
        halfHeightOfTaperedCylinder,
        topRadius,
        bottomRadius,
        convexRadius,
        material
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_TaperedCylinderShapeSettings_CreateShape(
    settings: *const JPH_TaperedCylinderShapeSettings
) -> *mut JPH_TaperedCylinderShape
{
    JPH_TaperedCylinderShapeSettings_CreateShape(
        settings
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_TaperedCylinderShape_GetTopRadius(
    shape: *const JPH_TaperedCylinderShape
) -> f32
{
    JPH_TaperedCylinderShape_GetTopRadius(
        shape
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_TaperedCylinderShape_GetBottomRadius(
    shape: *const JPH_TaperedCylinderShape
) -> f32
{
    JPH_TaperedCylinderShape_GetBottomRadius(
        shape
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_TaperedCylinderShape_GetConvexRadius(
    shape: *const JPH_TaperedCylinderShape
) -> f32
{
    JPH_TaperedCylinderShape_GetConvexRadius(
        shape
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_TaperedCylinderShape_GetHalfHeight(
    shape: *const JPH_TaperedCylinderShape
) -> f32
{
    JPH_TaperedCylinderShape_GetHalfHeight(
        shape
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_ConvexHullShapeSettings_Create(
    points: *const JPH_Vec3,
    pointsCount: u32,
    maxConvexRadius: f32
) -> *mut JPH_ConvexHullShapeSettings
{
    JPH_ConvexHullShapeSettings_Create(
        points,
        pointsCount,
        maxConvexRadius
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_ConvexHullShapeSettings_CreateShape(
    settings: *const JPH_ConvexHullShapeSettings
) -> *mut JPH_ConvexHullShape
{
    JPH_ConvexHullShapeSettings_CreateShape(
        settings
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_ConvexHullShape_GetNumPoints(
    shape: *const JPH_ConvexHullShape
) -> u32
{
    JPH_ConvexHullShape_GetNumPoints(
        shape
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_ConvexHullShape_GetPoint(
    shape: *const JPH_ConvexHullShape,
    index: u32,
    result: *mut JPH_Vec3
)
{
    JPH_ConvexHullShape_GetPoint(
        shape,
        index,
        result
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_ConvexHullShape_GetNumFaces(
    shape: *const JPH_ConvexHullShape
) -> u32
{
    JPH_ConvexHullShape_GetNumFaces(
        shape
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_ConvexHullShape_GetNumVerticesInFace(
    shape: *const JPH_ConvexHullShape,
    faceIndex: u32
) -> u32
{
    JPH_ConvexHullShape_GetNumVerticesInFace(
        shape,
        faceIndex
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_ConvexHullShape_GetFaceVertices(
    shape: *const JPH_ConvexHullShape,
    faceIndex: u32,
    maxVertices: u32,
    vertices: *mut u32
) -> u32
{
    JPH_ConvexHullShape_GetFaceVertices(
        shape,
        faceIndex,
        maxVertices,
        vertices
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_MeshShapeSettings_Create(
    triangles: *const JPH_Triangle,
    triangleCount: u32
) -> *mut JPH_MeshShapeSettings
{
    JPH_MeshShapeSettings_Create(
        triangles,
        triangleCount
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_MeshShapeSettings_Create2(
    vertices: *const JPH_Vec3,
    verticesCount: u32,
    triangles: *const JPH_IndexedTriangle,
    triangleCount: u32
) -> *mut JPH_MeshShapeSettings
{
    JPH_MeshShapeSettings_Create2(
        vertices,
        verticesCount,
        triangles,
        triangleCount
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_MeshShapeSettings_GetPerTriangleUserData(
    settings: *const JPH_MeshShapeSettings
) -> bool
{
    JPH_MeshShapeSettings_GetPerTriangleUserData(
        settings
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_MeshShapeSettings_SetPerTriangleUserData(
    settings: *mut JPH_MeshShapeSettings,
    perTriangleUserData: bool
)
{
    JPH_MeshShapeSettings_SetPerTriangleUserData(
        settings,
        perTriangleUserData
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_MeshShapeSettings_Sanitize(
    settings: *mut JPH_MeshShapeSettings
)
{
    JPH_MeshShapeSettings_Sanitize(
        settings
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_MeshShapeSettings_CreateShape(
    settings: *const JPH_MeshShapeSettings
) -> *mut JPH_MeshShape
{
    JPH_MeshShapeSettings_CreateShape(
        settings
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_MeshShape_GetTriangleUserData(
    shape: *const JPH_MeshShape,
    id: JPH_SubShapeID
) -> u32
{
    JPH_MeshShape_GetTriangleUserData(
        shape,
        id
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_HeightFieldShapeSettings_Create(
    samples: *const f32,
    offset: *const JPH_Vec3,
    scale: *const JPH_Vec3,
    sampleCount: u32
) -> *mut JPH_HeightFieldShapeSettings
{
    JPH_HeightFieldShapeSettings_Create(
        samples,
        offset,
        scale,
        sampleCount
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_HeightFieldShapeSettings_CreateShape(
    settings: *mut JPH_HeightFieldShapeSettings
) -> *mut JPH_HeightFieldShape
{
    JPH_HeightFieldShapeSettings_CreateShape(
        settings
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_HeightFieldShapeSettings_DetermineMinAndMaxSample(
    settings: *const JPH_HeightFieldShapeSettings,
    pOutMinValue: *mut f32,
    pOutMaxValue: *mut f32,
    pOutQuantizationScale: *mut f32
)
{
    JPH_HeightFieldShapeSettings_DetermineMinAndMaxSample(
        settings,
        pOutMinValue,
        pOutMaxValue,
        pOutQuantizationScale
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_HeightFieldShapeSettings_CalculateBitsPerSampleForError(
    settings: *const JPH_HeightFieldShapeSettings,
    maxError: f32
) -> u32
{
    JPH_HeightFieldShapeSettings_CalculateBitsPerSampleForError(
        settings,
        maxError
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_HeightFieldShape_GetSampleCount(
    shape: *const JPH_HeightFieldShape
) -> u32
{
    JPH_HeightFieldShape_GetSampleCount(
        shape
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_HeightFieldShape_GetBlockSize(
    shape: *const JPH_HeightFieldShape
) -> u32
{
    JPH_HeightFieldShape_GetBlockSize(
        shape
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_HeightFieldShape_GetMaterial(
    shape: *const JPH_HeightFieldShape,
    x: u32,
    y: u32
) -> *const JPH_PhysicsMaterial
{
    JPH_HeightFieldShape_GetMaterial(
        shape,
        x,
        y
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_HeightFieldShape_GetPosition(
    shape: *const JPH_HeightFieldShape,
    x: u32,
    y: u32,
    result: *mut JPH_Vec3
)
{
    JPH_HeightFieldShape_GetPosition(
        shape,
        x,
        y,
        result
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_HeightFieldShape_IsNoCollision(
    shape: *const JPH_HeightFieldShape,
    x: u32,
    y: u32
) -> bool
{
    JPH_HeightFieldShape_IsNoCollision(
        shape,
        x,
        y
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_HeightFieldShape_ProjectOntoSurface(
    shape: *const JPH_HeightFieldShape,
    localPosition: *const JPH_Vec3,
    outSurfacePosition: *mut JPH_Vec3,
    outSubShapeID: *mut JPH_SubShapeID
) -> bool
{
    JPH_HeightFieldShape_ProjectOntoSurface(
        shape,
        localPosition,
        outSurfacePosition,
        outSubShapeID
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_HeightFieldShape_GetMinHeightValue(
    shape: *const JPH_HeightFieldShape
) -> f32
{
    JPH_HeightFieldShape_GetMinHeightValue(
        shape
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_HeightFieldShape_GetMaxHeightValue(
    shape: *const JPH_HeightFieldShape
) -> f32
{
    JPH_HeightFieldShape_GetMaxHeightValue(
        shape
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_TaperedCapsuleShapeSettings_Create(
    halfHeightOfTaperedCylinder: f32,
    topRadius: f32,
    bottomRadius: f32
) -> *mut JPH_TaperedCapsuleShapeSettings
{
    JPH_TaperedCapsuleShapeSettings_Create(
        halfHeightOfTaperedCylinder,
        topRadius,
        bottomRadius
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_TaperedCapsuleShapeSettings_CreateShape(
    settings: *mut JPH_TaperedCapsuleShapeSettings
) -> *mut JPH_TaperedCapsuleShape
{
    JPH_TaperedCapsuleShapeSettings_CreateShape(
        settings
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_TaperedCapsuleShape_GetTopRadius(
    shape: *const JPH_TaperedCapsuleShape
) -> f32
{
    JPH_TaperedCapsuleShape_GetTopRadius(
        shape
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_TaperedCapsuleShape_GetBottomRadius(
    shape: *const JPH_TaperedCapsuleShape
) -> f32
{
    JPH_TaperedCapsuleShape_GetBottomRadius(
        shape
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_TaperedCapsuleShape_GetHalfHeight(
    shape: *const JPH_TaperedCapsuleShape
) -> f32
{
    JPH_TaperedCapsuleShape_GetHalfHeight(
        shape
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_CompoundShapeSettings_AddShape(
    settings: *mut JPH_CompoundShapeSettings,
    position: *const JPH_Vec3,
    rotation: *const JPH_Quat,
    shape: *const JPH_ShapeSettings,
    userData: u32
)
{
    JPH_CompoundShapeSettings_AddShape(
        settings,
        position,
        rotation,
        shape,
        userData
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_CompoundShapeSettings_AddShape2(
    settings: *mut JPH_CompoundShapeSettings,
    position: *const JPH_Vec3,
    rotation: *const JPH_Quat,
    shape: *const JPH_Shape,
    userData: u32
)
{
    JPH_CompoundShapeSettings_AddShape2(
        settings,
        position,
        rotation,
        shape,
        userData
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_CompoundShape_GetNumSubShapes(
    shape: *const JPH_CompoundShape
) -> u32
{
    JPH_CompoundShape_GetNumSubShapes(
        shape
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_CompoundShape_GetSubShape(
    shape: *const JPH_CompoundShape,
    index: u32,
    subShape: *mut *const JPH_Shape,
    positionCOM: *mut JPH_Vec3,
    rotation: *mut JPH_Quat,
    userData: *mut u32
)
{
    JPH_CompoundShape_GetSubShape(
        shape,
        index,
        subShape,
        positionCOM,
        rotation,
        userData
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_CompoundShape_GetSubShapeIndexFromID(
    shape: *const JPH_CompoundShape,
    id: JPH_SubShapeID,
    remainder: *mut JPH_SubShapeID
) -> u32
{
    JPH_CompoundShape_GetSubShapeIndexFromID(
        shape,
        id,
        remainder
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_StaticCompoundShapeSettings_Create(

) -> *mut JPH_StaticCompoundShapeSettings
{
    JPH_StaticCompoundShapeSettings_Create(

    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_StaticCompoundShape_Create(
    settings: *const JPH_StaticCompoundShapeSettings
) -> *mut JPH_StaticCompoundShape
{
    JPH_StaticCompoundShape_Create(
        settings
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_MutableCompoundShapeSettings_Create(

) -> *mut JPH_MutableCompoundShapeSettings
{
    JPH_MutableCompoundShapeSettings_Create(

    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_MutableCompoundShape_Create(
    settings: *const JPH_MutableCompoundShapeSettings
) -> *mut JPH_MutableCompoundShape
{
    JPH_MutableCompoundShape_Create(
        settings
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_MutableCompoundShape_AddShape(
    shape: *mut JPH_MutableCompoundShape,
    position: *const JPH_Vec3,
    rotation: *const JPH_Quat,
    child: *const JPH_Shape,
    userData: u32
) -> u32
{
    JPH_MutableCompoundShape_AddShape(
        shape,
        position,
        rotation,
        child,
        userData
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_MutableCompoundShape_RemoveShape(
    shape: *mut JPH_MutableCompoundShape,
    index: u32
)
{
    JPH_MutableCompoundShape_RemoveShape(
        shape,
        index
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_MutableCompoundShape_ModifyShape(
    shape: *mut JPH_MutableCompoundShape,
    index: u32,
    position: *const JPH_Vec3,
    rotation: *const JPH_Quat
)
{
    JPH_MutableCompoundShape_ModifyShape(
        shape,
        index,
        position,
        rotation
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_MutableCompoundShape_ModifyShape2(
    shape: *mut JPH_MutableCompoundShape,
    index: u32,
    position: *const JPH_Vec3,
    rotation: *const JPH_Quat,
    newShape: *const JPH_Shape
)
{
    JPH_MutableCompoundShape_ModifyShape2(
        shape,
        index,
        position,
        rotation,
        newShape
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_MutableCompoundShape_AdjustCenterOfMass(
    shape: *mut JPH_MutableCompoundShape
)
{
    JPH_MutableCompoundShape_AdjustCenterOfMass(
        shape
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_DecoratedShape_GetInnerShape(
    shape: *const JPH_DecoratedShape
) -> *const JPH_Shape
{
    JPH_DecoratedShape_GetInnerShape(
        shape
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_RotatedTranslatedShapeSettings_Create(
    position: *const JPH_Vec3,
    rotation: *const JPH_Quat,
    shapeSettings: *const JPH_ShapeSettings
) -> *mut JPH_RotatedTranslatedShapeSettings
{
    JPH_RotatedTranslatedShapeSettings_Create(
        position,
        rotation,
        shapeSettings
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_RotatedTranslatedShapeSettings_Create2(
    position: *const JPH_Vec3,
    rotation: *const JPH_Quat,
    shape: *const JPH_Shape
) -> *mut JPH_RotatedTranslatedShapeSettings
{
    JPH_RotatedTranslatedShapeSettings_Create2(
        position,
        rotation,
        shape
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_RotatedTranslatedShapeSettings_CreateShape(
    settings: *const JPH_RotatedTranslatedShapeSettings
) -> *mut JPH_RotatedTranslatedShape
{
    JPH_RotatedTranslatedShapeSettings_CreateShape(
        settings
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_RotatedTranslatedShape_Create(
    position: *const JPH_Vec3,
    rotation: *const JPH_Quat,
    shape: *const JPH_Shape
) -> *mut JPH_RotatedTranslatedShape
{
    JPH_RotatedTranslatedShape_Create(
        position,
        rotation,
        shape
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_RotatedTranslatedShape_GetPosition(
    shape: *const JPH_RotatedTranslatedShape,
    position: *mut JPH_Vec3
)
{
    JPH_RotatedTranslatedShape_GetPosition(
        shape,
        position
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_RotatedTranslatedShape_GetRotation(
    shape: *const JPH_RotatedTranslatedShape,
    rotation: *mut JPH_Quat
)
{
    JPH_RotatedTranslatedShape_GetRotation(
        shape,
        rotation
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_ScaledShapeSettings_Create(
    shapeSettings: *const JPH_ShapeSettings,
    scale: *const JPH_Vec3
) -> *mut JPH_ScaledShapeSettings
{
    JPH_ScaledShapeSettings_Create(
        shapeSettings,
        scale
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_ScaledShapeSettings_Create2(
    shape: *const JPH_Shape,
    scale: *const JPH_Vec3
) -> *mut JPH_ScaledShapeSettings
{
    JPH_ScaledShapeSettings_Create2(
        shape,
        scale
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_ScaledShapeSettings_CreateShape(
    settings: *const JPH_ScaledShapeSettings
) -> *mut JPH_ScaledShape
{
    JPH_ScaledShapeSettings_CreateShape(
        settings
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_ScaledShape_Create(
    shape: *const JPH_Shape,
    scale: *const JPH_Vec3
) -> *mut JPH_ScaledShape
{
    JPH_ScaledShape_Create(
        shape,
        scale
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_ScaledShape_GetScale(
    shape: *const JPH_ScaledShape,
    result: *mut JPH_Vec3
)
{
    JPH_ScaledShape_GetScale(
        shape,
        result
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_OffsetCenterOfMassShapeSettings_Create(
    offset: *const JPH_Vec3,
    shapeSettings: *const JPH_ShapeSettings
) -> *mut JPH_OffsetCenterOfMassShapeSettings
{
    JPH_OffsetCenterOfMassShapeSettings_Create(
        offset,
        shapeSettings
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_OffsetCenterOfMassShapeSettings_Create2(
    offset: *const JPH_Vec3,
    shape: *const JPH_Shape
) -> *mut JPH_OffsetCenterOfMassShapeSettings
{
    JPH_OffsetCenterOfMassShapeSettings_Create2(
        offset,
        shape
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_OffsetCenterOfMassShapeSettings_CreateShape(
    settings: *const JPH_OffsetCenterOfMassShapeSettings
) -> *mut JPH_OffsetCenterOfMassShape
{
    JPH_OffsetCenterOfMassShapeSettings_CreateShape(
        settings
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_OffsetCenterOfMassShape_Create(
    offset: *const JPH_Vec3,
    shape: *const JPH_Shape
) -> *mut JPH_OffsetCenterOfMassShape
{
    JPH_OffsetCenterOfMassShape_Create(
        offset,
        shape
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_OffsetCenterOfMassShape_GetOffset(
    shape: *const JPH_OffsetCenterOfMassShape,
    result: *mut JPH_Vec3
)
{
    JPH_OffsetCenterOfMassShape_GetOffset(
        shape,
        result
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_EmptyShapeSettings_Create(
    centerOfMass: *const JPH_Vec3
) -> *mut JPH_EmptyShapeSettings
{
    JPH_EmptyShapeSettings_Create(
        centerOfMass
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_EmptyShapeSettings_CreateShape(
    settings: *const JPH_EmptyShapeSettings
) -> *mut JPH_EmptyShape
{
    JPH_EmptyShapeSettings_CreateShape(
        settings
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_BodyCreationSettings_Create(

) -> *mut JPH_BodyCreationSettings
{
    JPH_BodyCreationSettings_Create(

    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_BodyCreationSettings_Create2(
    settings: *mut JPH_ShapeSettings,
    position: *const JPH_RVec3,
    rotation: *const JPH_Quat,
    motionType: JPH_MotionType,
    objectLayer: JPH_ObjectLayer
) -> *mut JPH_BodyCreationSettings
{
    JPH_BodyCreationSettings_Create2(
        settings,
        position,
        rotation,
        motionType,
        objectLayer
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_BodyCreationSettings_Create3(
    shape: *const JPH_Shape,
    position: *const JPH_RVec3,
    rotation: *const JPH_Quat,
    motionType: JPH_MotionType,
    objectLayer: JPH_ObjectLayer
) -> *mut JPH_BodyCreationSettings
{
    JPH_BodyCreationSettings_Create3(
        shape,
        position,
        rotation,
        motionType,
        objectLayer
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_BodyCreationSettings_Destroy(
    settings: *mut JPH_BodyCreationSettings
)
{
    JPH_BodyCreationSettings_Destroy(
        settings
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_BodyCreationSettings_GetPosition(
    settings: *mut JPH_BodyCreationSettings,
    result: *mut JPH_RVec3
)
{
    JPH_BodyCreationSettings_GetPosition(
        settings,
        result
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_BodyCreationSettings_SetPosition(
    settings: *mut JPH_BodyCreationSettings,
    value: *const JPH_RVec3
)
{
    JPH_BodyCreationSettings_SetPosition(
        settings,
        value
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_BodyCreationSettings_GetRotation(
    settings: *mut JPH_BodyCreationSettings,
    result: *mut JPH_Quat
)
{
    JPH_BodyCreationSettings_GetRotation(
        settings,
        result
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_BodyCreationSettings_SetRotation(
    settings: *mut JPH_BodyCreationSettings,
    value: *const JPH_Quat
)
{
    JPH_BodyCreationSettings_SetRotation(
        settings,
        value
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_BodyCreationSettings_GetLinearVelocity(
    settings: *mut JPH_BodyCreationSettings,
    velocity: *mut JPH_Vec3
)
{
    JPH_BodyCreationSettings_GetLinearVelocity(
        settings,
        velocity
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_BodyCreationSettings_SetLinearVelocity(
    settings: *mut JPH_BodyCreationSettings,
    velocity: *const JPH_Vec3
)
{
    JPH_BodyCreationSettings_SetLinearVelocity(
        settings,
        velocity
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_BodyCreationSettings_GetAngularVelocity(
    settings: *mut JPH_BodyCreationSettings,
    velocity: *mut JPH_Vec3
)
{
    JPH_BodyCreationSettings_GetAngularVelocity(
        settings,
        velocity
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_BodyCreationSettings_SetAngularVelocity(
    settings: *mut JPH_BodyCreationSettings,
    velocity: *const JPH_Vec3
)
{
    JPH_BodyCreationSettings_SetAngularVelocity(
        settings,
        velocity
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_BodyCreationSettings_GetMotionType(
    settings: *mut JPH_BodyCreationSettings
) -> JPH_MotionType
{
    JPH_BodyCreationSettings_GetMotionType(
        settings
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_BodyCreationSettings_SetMotionType(
    settings: *mut JPH_BodyCreationSettings,
    value: JPH_MotionType
)
{
    JPH_BodyCreationSettings_SetMotionType(
        settings,
        value
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_BodyCreationSettings_GetAllowedDOFs(
    settings: *mut JPH_BodyCreationSettings
) -> JPH_AllowedDOFs
{
    JPH_BodyCreationSettings_GetAllowedDOFs(
        settings
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_BodyCreationSettings_SetAllowedDOFs(
    settings: *mut JPH_BodyCreationSettings,
    value: JPH_AllowedDOFs
)
{
    JPH_BodyCreationSettings_SetAllowedDOFs(
        settings,
        value
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_SoftBodyCreationSettings_Create(

) -> *mut JPH_SoftBodyCreationSettings
{
    JPH_SoftBodyCreationSettings_Create(

    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_SoftBodyCreationSettings_Destroy(
    settings: *mut JPH_SoftBodyCreationSettings
)
{
    JPH_SoftBodyCreationSettings_Destroy(
        settings
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_ConstraintSettings_Destroy(
    settings: *mut JPH_ConstraintSettings
)
{
    JPH_ConstraintSettings_Destroy(
        settings
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_ConstraintSettings_GetEnabled(
    settings: *mut JPH_ConstraintSettings
) -> bool
{
    JPH_ConstraintSettings_GetEnabled(
        settings
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_FixedConstraintSettings_SetEnabled(
    settings: *mut JPH_ConstraintSettings,
    value: bool
)
{
    JPH_FixedConstraintSettings_SetEnabled(
        settings,
        value
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_ConstraintSettings_GetConstraintPriority(
    settings: *mut JPH_ConstraintSettings
) -> u32
{
    JPH_ConstraintSettings_GetConstraintPriority(
        settings
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_FixedConstraintSettings_SetConstraintPriority(
    settings: *mut JPH_ConstraintSettings,
    value: u32
)
{
    JPH_FixedConstraintSettings_SetConstraintPriority(
        settings,
        value
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_ConstraintSettings_GetNumVelocityStepsOverride(
    settings: *mut JPH_ConstraintSettings
) -> u32
{
    JPH_ConstraintSettings_GetNumVelocityStepsOverride(
        settings
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_ConstraintSettings_SetNumVelocityStepsOverride(
    settings: *mut JPH_ConstraintSettings,
    value: u32
)
{
    JPH_ConstraintSettings_SetNumVelocityStepsOverride(
        settings,
        value
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_ConstraintSettings_GetNumPositionStepsOverride(
    settings: *mut JPH_ConstraintSettings
) -> u32
{
    JPH_ConstraintSettings_GetNumPositionStepsOverride(
        settings
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_ConstraintSettings_SetNumPositionStepsOverride(
    settings: *mut JPH_ConstraintSettings,
    value: u32
)
{
    JPH_ConstraintSettings_SetNumPositionStepsOverride(
        settings,
        value
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_ConstraintSettings_GetDrawConstraintSize(
    settings: *mut JPH_ConstraintSettings
) -> f32
{
    JPH_ConstraintSettings_GetDrawConstraintSize(
        settings
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_ConstraintSettings_SetDrawConstraintSize(
    settings: *mut JPH_ConstraintSettings,
    value: f32
)
{
    JPH_ConstraintSettings_SetDrawConstraintSize(
        settings,
        value
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_ConstraintSettings_GetUserData(
    settings: *mut JPH_ConstraintSettings
) -> u64
{
    JPH_ConstraintSettings_GetUserData(
        settings
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_ConstraintSettings_SetUserData(
    settings: *mut JPH_ConstraintSettings,
    value: u64
)
{
    JPH_ConstraintSettings_SetUserData(
        settings,
        value
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_Constraint_GetConstraintSettings(
    constraint: *mut JPH_Constraint
) -> *mut JPH_ConstraintSettings
{
    JPH_Constraint_GetConstraintSettings(
        constraint
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_Constraint_GetType(
    constraint: *const JPH_Constraint
) -> JPH_ConstraintType
{
    JPH_Constraint_GetType(
        constraint
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_Constraint_GetSubType(
    constraint: *const JPH_Constraint
) -> JPH_ConstraintSubType
{
    JPH_Constraint_GetSubType(
        constraint
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_Constraint_GetConstraintPriority(
    constraint: *const JPH_Constraint
) -> u32
{
    JPH_Constraint_GetConstraintPriority(
        constraint
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_Constraint_SetConstraintPriority(
    constraint: *mut JPH_Constraint,
    priority: u32
)
{
    JPH_Constraint_SetConstraintPriority(
        constraint,
        priority
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_Constraint_GetEnabled(
    constraint: *mut JPH_Constraint
) -> bool
{
    JPH_Constraint_GetEnabled(
        constraint
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_Constraint_SetEnabled(
    constraint: *mut JPH_Constraint,
    enabled: bool
)
{
    JPH_Constraint_SetEnabled(
        constraint,
        enabled
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_Constraint_GetUserData(
    constraint: *const JPH_Constraint
) -> u64
{
    JPH_Constraint_GetUserData(
        constraint
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_Constraint_SetUserData(
    constraint: *mut JPH_Constraint,
    userData: u64
)
{
    JPH_Constraint_SetUserData(
        constraint,
        userData
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_Constraint_NotifyShapeChanged(
    constraint: *mut JPH_Constraint,
    bodyID: JPH_BodyID,
    deltaCOM: *mut JPH_Vec3
)
{
    JPH_Constraint_NotifyShapeChanged(
        constraint,
        bodyID,
        deltaCOM
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_Constraint_Destroy(
    constraint: *mut JPH_Constraint
)
{
    JPH_Constraint_Destroy(
        constraint
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_FixedConstraintSettings_Create(

) -> *mut JPH_FixedConstraintSettings
{
    JPH_FixedConstraintSettings_Create(

    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_FixedConstraintSettings_GetSpace(
    settings: *mut JPH_FixedConstraintSettings
) -> JPH_ConstraintSpace
{
    JPH_FixedConstraintSettings_GetSpace(
        settings
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_FixedConstraintSettings_SetSpace(
    settings: *mut JPH_FixedConstraintSettings,
    space: JPH_ConstraintSpace
)
{
    JPH_FixedConstraintSettings_SetSpace(
        settings,
        space
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_FixedConstraintSettings_GetAutoDetectPoint(
    settings: *mut JPH_FixedConstraintSettings
) -> bool
{
    JPH_FixedConstraintSettings_GetAutoDetectPoint(
        settings
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_FixedConstraintSettings_SetAutoDetectPoint(
    settings: *mut JPH_FixedConstraintSettings,
    value: bool
)
{
    JPH_FixedConstraintSettings_SetAutoDetectPoint(
        settings,
        value
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_FixedConstraintSettings_GetPoint1(
    settings: *mut JPH_FixedConstraintSettings,
    result: *mut JPH_RVec3
)
{
    JPH_FixedConstraintSettings_GetPoint1(
        settings,
        result
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_FixedConstraintSettings_SetPoint1(
    settings: *mut JPH_FixedConstraintSettings,
    value: *const JPH_RVec3
)
{
    JPH_FixedConstraintSettings_SetPoint1(
        settings,
        value
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_FixedConstraintSettings_GetAxisX1(
    settings: *mut JPH_FixedConstraintSettings,
    result: *mut JPH_Vec3
)
{
    JPH_FixedConstraintSettings_GetAxisX1(
        settings,
        result
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_FixedConstraintSettings_SetAxisX1(
    settings: *mut JPH_FixedConstraintSettings,
    value: *const JPH_Vec3
)
{
    JPH_FixedConstraintSettings_SetAxisX1(
        settings,
        value
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_FixedConstraintSettings_GetAxisY1(
    settings: *mut JPH_FixedConstraintSettings,
    result: *mut JPH_Vec3
)
{
    JPH_FixedConstraintSettings_GetAxisY1(
        settings,
        result
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_FixedConstraintSettings_SetAxisY1(
    settings: *mut JPH_FixedConstraintSettings,
    value: *const JPH_Vec3
)
{
    JPH_FixedConstraintSettings_SetAxisY1(
        settings,
        value
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_FixedConstraintSettings_GetPoint2(
    settings: *mut JPH_FixedConstraintSettings,
    result: *mut JPH_RVec3
)
{
    JPH_FixedConstraintSettings_GetPoint2(
        settings,
        result
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_FixedConstraintSettings_SetPoint2(
    settings: *mut JPH_FixedConstraintSettings,
    value: *const JPH_RVec3
)
{
    JPH_FixedConstraintSettings_SetPoint2(
        settings,
        value
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_FixedConstraintSettings_GetAxisX2(
    settings: *mut JPH_FixedConstraintSettings,
    result: *mut JPH_Vec3
)
{
    JPH_FixedConstraintSettings_GetAxisX2(
        settings,
        result
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_FixedConstraintSettings_SetAxisX2(
    settings: *mut JPH_FixedConstraintSettings,
    value: *const JPH_Vec3
)
{
    JPH_FixedConstraintSettings_SetAxisX2(
        settings,
        value
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_FixedConstraintSettings_GetAxisY2(
    settings: *mut JPH_FixedConstraintSettings,
    result: *mut JPH_Vec3
)
{
    JPH_FixedConstraintSettings_GetAxisY2(
        settings,
        result
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_FixedConstraintSettings_SetAxisY2(
    settings: *mut JPH_FixedConstraintSettings,
    value: *const JPH_Vec3
)
{
    JPH_FixedConstraintSettings_SetAxisY2(
        settings,
        value
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_FixedConstraintSettings_CreateConstraint(
    settings: *mut JPH_FixedConstraintSettings,
    body1: *mut JPH_Body,
    body2: *mut JPH_Body
) -> *mut JPH_FixedConstraint
{
    JPH_FixedConstraintSettings_CreateConstraint(
        settings,
        body1,
        body2
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_FixedConstraint_GetTotalLambdaPosition(
    constraint: *const JPH_FixedConstraint,
    result: *mut JPH_Vec3
)
{
    JPH_FixedConstraint_GetTotalLambdaPosition(
        constraint,
        result
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_FixedConstraint_GetTotalLambdaRotation(
    constraint: *const JPH_FixedConstraint,
    result: *mut JPH_Vec3
)
{
    JPH_FixedConstraint_GetTotalLambdaRotation(
        constraint,
        result
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_DistanceConstraintSettings_Create(

) -> *mut JPH_DistanceConstraintSettings
{
    JPH_DistanceConstraintSettings_Create(

    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_DistanceConstraintSettings_GetSpace(
    settings: *mut JPH_DistanceConstraintSettings
) -> JPH_ConstraintSpace
{
    JPH_DistanceConstraintSettings_GetSpace(
        settings
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_DistanceConstraintSettings_SetSpace(
    settings: *mut JPH_DistanceConstraintSettings,
    space: JPH_ConstraintSpace
)
{
    JPH_DistanceConstraintSettings_SetSpace(
        settings,
        space
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_DistanceConstraintSettings_GetPoint1(
    settings: *mut JPH_DistanceConstraintSettings,
    result: *mut JPH_RVec3
)
{
    JPH_DistanceConstraintSettings_GetPoint1(
        settings,
        result
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_DistanceConstraintSettings_SetPoint1(
    settings: *mut JPH_DistanceConstraintSettings,
    value: *const JPH_RVec3
)
{
    JPH_DistanceConstraintSettings_SetPoint1(
        settings,
        value
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_DistanceConstraintSettings_GetPoint2(
    settings: *mut JPH_DistanceConstraintSettings,
    result: *mut JPH_RVec3
)
{
    JPH_DistanceConstraintSettings_GetPoint2(
        settings,
        result
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_DistanceConstraintSettings_SetPoint2(
    settings: *mut JPH_DistanceConstraintSettings,
    value: *const JPH_RVec3
)
{
    JPH_DistanceConstraintSettings_SetPoint2(
        settings,
        value
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_DistanceConstraintSettings_CreateConstraint(
    settings: *mut JPH_DistanceConstraintSettings,
    body1: *mut JPH_Body,
    body2: *mut JPH_Body
) -> *mut JPH_DistanceConstraint
{
    JPH_DistanceConstraintSettings_CreateConstraint(
        settings,
        body1,
        body2
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_DistanceConstraint_SetDistance(
    constraint: *mut JPH_DistanceConstraint,
    minDistance: f32,
    maxDistance: f32
)
{
    JPH_DistanceConstraint_SetDistance(
        constraint,
        minDistance,
        maxDistance
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_DistanceConstraint_GetMinDistance(
    constraint: *mut JPH_DistanceConstraint
) -> f32
{
    JPH_DistanceConstraint_GetMinDistance(
        constraint
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_DistanceConstraint_GetMaxDistance(
    constraint: *mut JPH_DistanceConstraint
) -> f32
{
    JPH_DistanceConstraint_GetMaxDistance(
        constraint
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_DistanceConstraint_GetLimitsSpringSettings(
    constraint: *mut JPH_DistanceConstraint,
    result: *mut JPH_SpringSettings
)
{
    JPH_DistanceConstraint_GetLimitsSpringSettings(
        constraint,
        result
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_DistanceConstraint_SetLimitsSpringSettings(
    constraint: *mut JPH_DistanceConstraint,
    settings: *mut JPH_SpringSettings
)
{
    JPH_DistanceConstraint_SetLimitsSpringSettings(
        constraint,
        settings
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_DistanceConstraint_GetTotalLambdaPosition(
    constraint: *const JPH_DistanceConstraint
) -> f32
{
    JPH_DistanceConstraint_GetTotalLambdaPosition(
        constraint
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_PointConstraintSettings_Create(

) -> *mut JPH_PointConstraintSettings
{
    JPH_PointConstraintSettings_Create(

    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_PointConstraintSettings_GetSpace(
    settings: *mut JPH_PointConstraintSettings
) -> JPH_ConstraintSpace
{
    JPH_PointConstraintSettings_GetSpace(
        settings
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_PointConstraintSettings_SetSpace(
    settings: *mut JPH_PointConstraintSettings,
    space: JPH_ConstraintSpace
)
{
    JPH_PointConstraintSettings_SetSpace(
        settings,
        space
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_PointConstraintSettings_GetPoint1(
    settings: *mut JPH_PointConstraintSettings,
    result: *mut JPH_RVec3
)
{
    JPH_PointConstraintSettings_GetPoint1(
        settings,
        result
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_PointConstraintSettings_SetPoint1(
    settings: *mut JPH_PointConstraintSettings,
    value: *const JPH_RVec3
)
{
    JPH_PointConstraintSettings_SetPoint1(
        settings,
        value
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_PointConstraintSettings_GetPoint2(
    settings: *mut JPH_PointConstraintSettings,
    result: *mut JPH_RVec3
)
{
    JPH_PointConstraintSettings_GetPoint2(
        settings,
        result
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_PointConstraintSettings_SetPoint2(
    settings: *mut JPH_PointConstraintSettings,
    value: *const JPH_RVec3
)
{
    JPH_PointConstraintSettings_SetPoint2(
        settings,
        value
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_PointConstraintSettings_CreateConstraint(
    settings: *mut JPH_PointConstraintSettings,
    body1: *mut JPH_Body,
    body2: *mut JPH_Body
) -> *mut JPH_PointConstraint
{
    JPH_PointConstraintSettings_CreateConstraint(
        settings,
        body1,
        body2
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_PointConstraint_SetPoint1(
    constraint: *mut JPH_PointConstraint,
    space: JPH_ConstraintSpace,
    value: *mut JPH_RVec3
)
{
    JPH_PointConstraint_SetPoint1(
        constraint,
        space,
        value
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_PointConstraint_SetPoint2(
    constraint: *mut JPH_PointConstraint,
    space: JPH_ConstraintSpace,
    value: *mut JPH_RVec3
)
{
    JPH_PointConstraint_SetPoint2(
        constraint,
        space,
        value
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_PointConstraint_GetTotalLambdaPosition(
    constraint: *const JPH_PointConstraint,
    result: *mut JPH_Vec3
)
{
    JPH_PointConstraint_GetTotalLambdaPosition(
        constraint,
        result
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_HingeConstraintSettings_Create(

) -> *mut JPH_HingeConstraintSettings
{
    JPH_HingeConstraintSettings_Create(

    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_HingeConstraintSettings_GetPoint1(
    settings: *mut JPH_HingeConstraintSettings,
    result: *mut JPH_RVec3
)
{
    JPH_HingeConstraintSettings_GetPoint1(
        settings,
        result
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_HingeConstraintSettings_SetPoint1(
    settings: *mut JPH_HingeConstraintSettings,
    value: *const JPH_RVec3
)
{
    JPH_HingeConstraintSettings_SetPoint1(
        settings,
        value
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_HingeConstraintSettings_GetPoint2(
    settings: *mut JPH_HingeConstraintSettings,
    result: *mut JPH_RVec3
)
{
    JPH_HingeConstraintSettings_GetPoint2(
        settings,
        result
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_HingeConstraintSettings_SetPoint2(
    settings: *mut JPH_HingeConstraintSettings,
    value: *const JPH_RVec3
)
{
    JPH_HingeConstraintSettings_SetPoint2(
        settings,
        value
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_HingeConstraintSettings_SetHingeAxis1(
    settings: *mut JPH_HingeConstraintSettings,
    value: *const JPH_Vec3
)
{
    JPH_HingeConstraintSettings_SetHingeAxis1(
        settings,
        value
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_HingeConstraintSettings_GetHingeAxis1(
    settings: *mut JPH_HingeConstraintSettings,
    result: *mut JPH_Vec3
)
{
    JPH_HingeConstraintSettings_GetHingeAxis1(
        settings,
        result
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_HingeConstraintSettings_SetNormalAxis1(
    settings: *mut JPH_HingeConstraintSettings,
    value: *const JPH_Vec3
)
{
    JPH_HingeConstraintSettings_SetNormalAxis1(
        settings,
        value
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_HingeConstraintSettings_GetNormalAxis1(
    settings: *mut JPH_HingeConstraintSettings,
    result: *mut JPH_Vec3
)
{
    JPH_HingeConstraintSettings_GetNormalAxis1(
        settings,
        result
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_HingeConstraintSettings_SetHingeAxis2(
    settings: *mut JPH_HingeConstraintSettings,
    value: *const JPH_Vec3
)
{
    JPH_HingeConstraintSettings_SetHingeAxis2(
        settings,
        value
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_HingeConstraintSettings_GetHingeAxis2(
    settings: *mut JPH_HingeConstraintSettings,
    result: *mut JPH_Vec3
)
{
    JPH_HingeConstraintSettings_GetHingeAxis2(
        settings,
        result
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_HingeConstraintSettings_SetNormalAxis2(
    settings: *mut JPH_HingeConstraintSettings,
    value: *const JPH_Vec3
)
{
    JPH_HingeConstraintSettings_SetNormalAxis2(
        settings,
        value
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_HingeConstraintSettings_GetNormalAxis2(
    settings: *mut JPH_HingeConstraintSettings,
    result: *mut JPH_Vec3
)
{
    JPH_HingeConstraintSettings_GetNormalAxis2(
        settings,
        result
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_HingeConstraintSettings_CreateConstraint(
    settings: *mut JPH_HingeConstraintSettings,
    body1: *mut JPH_Body,
    body2: *mut JPH_Body
) -> *mut JPH_HingeConstraint
{
    JPH_HingeConstraintSettings_CreateConstraint(
        settings,
        body1,
        body2
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_HingeConstraint_GetSettings(
    constraint: *mut JPH_HingeConstraint
) -> *mut JPH_HingeConstraintSettings
{
    JPH_HingeConstraint_GetSettings(
        constraint
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_HingeConstraint_GetCurrentAngle(
    constraint: *mut JPH_HingeConstraint
) -> f32
{
    JPH_HingeConstraint_GetCurrentAngle(
        constraint
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_HingeConstraint_SetMaxFrictionTorque(
    constraint: *mut JPH_HingeConstraint,
    frictionTorque: f32
)
{
    JPH_HingeConstraint_SetMaxFrictionTorque(
        constraint,
        frictionTorque
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_HingeConstraint_GetMaxFrictionTorque(
    constraint: *mut JPH_HingeConstraint
) -> f32
{
    JPH_HingeConstraint_GetMaxFrictionTorque(
        constraint
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_HingeConstraint_SetMotorSettings(
    constraint: *mut JPH_HingeConstraint,
    settings: *mut JPH_MotorSettings
)
{
    JPH_HingeConstraint_SetMotorSettings(
        constraint,
        settings
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_HingeConstraint_GetMotorSettings(
    constraint: *mut JPH_HingeConstraint,
    result: *mut JPH_MotorSettings
)
{
    JPH_HingeConstraint_GetMotorSettings(
        constraint,
        result
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_HingeConstraint_SetMotorState(
    constraint: *mut JPH_HingeConstraint,
    state: JPH_MotorState
)
{
    JPH_HingeConstraint_SetMotorState(
        constraint,
        state
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_HingeConstraint_GetMotorState(
    constraint: *mut JPH_HingeConstraint
) -> JPH_MotorState
{
    JPH_HingeConstraint_GetMotorState(
        constraint
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_HingeConstraint_SetTargetAngularVelocity(
    constraint: *mut JPH_HingeConstraint,
    angularVelocity: f32
)
{
    JPH_HingeConstraint_SetTargetAngularVelocity(
        constraint,
        angularVelocity
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_HingeConstraint_GetTargetAngularVelocity(
    constraint: *mut JPH_HingeConstraint
) -> f32
{
    JPH_HingeConstraint_GetTargetAngularVelocity(
        constraint
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_HingeConstraint_SetTargetAngle(
    constraint: *mut JPH_HingeConstraint,
    angle: f32
)
{
    JPH_HingeConstraint_SetTargetAngle(
        constraint,
        angle
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_HingeConstraint_GetTargetAngle(
    constraint: *mut JPH_HingeConstraint
) -> f32
{
    JPH_HingeConstraint_GetTargetAngle(
        constraint
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_HingeConstraint_SetLimits(
    constraint: *mut JPH_HingeConstraint,
    inLimitsMin: f32,
    inLimitsMax: f32
)
{
    JPH_HingeConstraint_SetLimits(
        constraint,
        inLimitsMin,
        inLimitsMax
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_HingeConstraint_GetLimitsMin(
    constraint: *mut JPH_HingeConstraint
) -> f32
{
    JPH_HingeConstraint_GetLimitsMin(
        constraint
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_HingeConstraint_GetLimitsMax(
    constraint: *mut JPH_HingeConstraint
) -> f32
{
    JPH_HingeConstraint_GetLimitsMax(
        constraint
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_HingeConstraint_HasLimits(
    constraint: *mut JPH_HingeConstraint
) -> bool
{
    JPH_HingeConstraint_HasLimits(
        constraint
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_HingeConstraint_GetLimitsSpringSettings(
    constraint: *mut JPH_HingeConstraint,
    result: *mut JPH_SpringSettings
)
{
    JPH_HingeConstraint_GetLimitsSpringSettings(
        constraint,
        result
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_HingeConstraint_SetLimitsSpringSettings(
    constraint: *mut JPH_HingeConstraint,
    settings: *mut JPH_SpringSettings
)
{
    JPH_HingeConstraint_SetLimitsSpringSettings(
        constraint,
        settings
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_HingeConstraint_GetTotalLambdaPosition(
    constraint: *const JPH_HingeConstraint,
    result: *mut JPH_Vec3
)
{
    JPH_HingeConstraint_GetTotalLambdaPosition(
        constraint,
        result
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_HingeConstraint_GetTotalLambdaRotation(
    constraint: *const JPH_HingeConstraint,
    x: *mut f32,
    y: *mut f32
)
{
    JPH_HingeConstraint_GetTotalLambdaRotation(
        constraint,
        x,
        y
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_HingeConstraint_GetTotalLambdaRotationLimits(
    constraint: *const JPH_HingeConstraint
) -> f32
{
    JPH_HingeConstraint_GetTotalLambdaRotationLimits(
        constraint
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_HingeConstraint_GetTotalLambdaMotor(
    constraint: *const JPH_HingeConstraint
) -> f32
{
    JPH_HingeConstraint_GetTotalLambdaMotor(
        constraint
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_SliderConstraintSettings_Create(

) -> *mut JPH_SliderConstraintSettings
{
    JPH_SliderConstraintSettings_Create(

    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_SliderConstraintSettings_SetSliderAxis(
    settings: *mut JPH_SliderConstraintSettings,
    axis: *const JPH_Vec3
)
{
    JPH_SliderConstraintSettings_SetSliderAxis(
        settings,
        axis
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_SliderConstraintSettings_GetAutoDetectPoint(
    settings: *mut JPH_SliderConstraintSettings
) -> bool
{
    JPH_SliderConstraintSettings_GetAutoDetectPoint(
        settings
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_SliderConstraintSettings_SetAutoDetectPoint(
    settings: *mut JPH_SliderConstraintSettings,
    value: bool
)
{
    JPH_SliderConstraintSettings_SetAutoDetectPoint(
        settings,
        value
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_SliderConstraintSettings_GetPoint1(
    settings: *mut JPH_SliderConstraintSettings,
    result: *mut JPH_RVec3
)
{
    JPH_SliderConstraintSettings_GetPoint1(
        settings,
        result
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_SliderConstraintSettings_SetPoint1(
    settings: *mut JPH_SliderConstraintSettings,
    value: *const JPH_RVec3
)
{
    JPH_SliderConstraintSettings_SetPoint1(
        settings,
        value
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_SliderConstraintSettings_GetPoint2(
    settings: *mut JPH_SliderConstraintSettings,
    result: *mut JPH_RVec3
)
{
    JPH_SliderConstraintSettings_GetPoint2(
        settings,
        result
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_SliderConstraintSettings_SetPoint2(
    settings: *mut JPH_SliderConstraintSettings,
    value: *const JPH_RVec3
)
{
    JPH_SliderConstraintSettings_SetPoint2(
        settings,
        value
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_SliderConstraintSettings_SetSliderAxis1(
    settings: *mut JPH_SliderConstraintSettings,
    value: *const JPH_Vec3
)
{
    JPH_SliderConstraintSettings_SetSliderAxis1(
        settings,
        value
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_SliderConstraintSettings_GetSliderAxis1(
    settings: *mut JPH_SliderConstraintSettings,
    result: *mut JPH_Vec3
)
{
    JPH_SliderConstraintSettings_GetSliderAxis1(
        settings,
        result
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_SliderConstraintSettings_SetNormalAxis1(
    settings: *mut JPH_SliderConstraintSettings,
    value: *const JPH_Vec3
)
{
    JPH_SliderConstraintSettings_SetNormalAxis1(
        settings,
        value
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_SliderConstraintSettings_GetNormalAxis1(
    settings: *mut JPH_SliderConstraintSettings,
    result: *mut JPH_Vec3
)
{
    JPH_SliderConstraintSettings_GetNormalAxis1(
        settings,
        result
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_SliderConstraintSettings_SetSliderAxis2(
    settings: *mut JPH_SliderConstraintSettings,
    value: *const JPH_Vec3
)
{
    JPH_SliderConstraintSettings_SetSliderAxis2(
        settings,
        value
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_SliderConstraintSettings_GetSliderAxis2(
    settings: *mut JPH_SliderConstraintSettings,
    result: *mut JPH_Vec3
)
{
    JPH_SliderConstraintSettings_GetSliderAxis2(
        settings,
        result
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_SliderConstraintSettings_SetNormalAxis2(
    settings: *mut JPH_SliderConstraintSettings,
    value: *const JPH_Vec3
)
{
    JPH_SliderConstraintSettings_SetNormalAxis2(
        settings,
        value
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_SliderConstraintSettings_GetNormalAxis2(
    settings: *mut JPH_SliderConstraintSettings,
    result: *mut JPH_Vec3
)
{
    JPH_SliderConstraintSettings_GetNormalAxis2(
        settings,
        result
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_SliderConstraintSettings_CreateConstraint(
    settings: *mut JPH_SliderConstraintSettings,
    body1: *mut JPH_Body,
    body2: *mut JPH_Body
) -> *mut JPH_SliderConstraint
{
    JPH_SliderConstraintSettings_CreateConstraint(
        settings,
        body1,
        body2
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_SliderConstraint_GetSettings(
    constraint: *mut JPH_SliderConstraint
) -> *mut JPH_SliderConstraintSettings
{
    JPH_SliderConstraint_GetSettings(
        constraint
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_SliderConstraint_GetCurrentPosition(
    constraint: *mut JPH_SliderConstraint
) -> f32
{
    JPH_SliderConstraint_GetCurrentPosition(
        constraint
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_SliderConstraint_SetMaxFrictionForce(
    constraint: *mut JPH_SliderConstraint,
    frictionForce: f32
)
{
    JPH_SliderConstraint_SetMaxFrictionForce(
        constraint,
        frictionForce
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_SliderConstraint_GetMaxFrictionForce(
    constraint: *mut JPH_SliderConstraint
) -> f32
{
    JPH_SliderConstraint_GetMaxFrictionForce(
        constraint
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_SliderConstraint_SetMotorSettings(
    constraint: *mut JPH_SliderConstraint,
    settings: *mut JPH_MotorSettings
)
{
    JPH_SliderConstraint_SetMotorSettings(
        constraint,
        settings
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_SliderConstraint_GetMotorSettings(
    constraint: *mut JPH_SliderConstraint,
    result: *mut JPH_MotorSettings
)
{
    JPH_SliderConstraint_GetMotorSettings(
        constraint,
        result
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_SliderConstraint_SetMotorState(
    constraint: *mut JPH_SliderConstraint,
    state: JPH_MotorState
)
{
    JPH_SliderConstraint_SetMotorState(
        constraint,
        state
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_SliderConstraint_GetMotorState(
    constraint: *mut JPH_SliderConstraint
) -> JPH_MotorState
{
    JPH_SliderConstraint_GetMotorState(
        constraint
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_SliderConstraint_SetTargetVelocity(
    constraint: *mut JPH_SliderConstraint,
    velocity: f32
)
{
    JPH_SliderConstraint_SetTargetVelocity(
        constraint,
        velocity
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_SliderConstraint_GetTargetVelocity(
    constraint: *mut JPH_SliderConstraint
) -> f32
{
    JPH_SliderConstraint_GetTargetVelocity(
        constraint
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_SliderConstraint_SetTargetPosition(
    constraint: *mut JPH_SliderConstraint,
    position: f32
)
{
    JPH_SliderConstraint_SetTargetPosition(
        constraint,
        position
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_SliderConstraint_GetTargetPosition(
    constraint: *mut JPH_SliderConstraint
) -> f32
{
    JPH_SliderConstraint_GetTargetPosition(
        constraint
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_SliderConstraint_SetLimits(
    constraint: *mut JPH_SliderConstraint,
    inLimitsMin: f32,
    inLimitsMax: f32
)
{
    JPH_SliderConstraint_SetLimits(
        constraint,
        inLimitsMin,
        inLimitsMax
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_SliderConstraint_GetLimitsMin(
    constraint: *mut JPH_SliderConstraint
) -> f32
{
    JPH_SliderConstraint_GetLimitsMin(
        constraint
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_SliderConstraint_GetLimitsMax(
    constraint: *mut JPH_SliderConstraint
) -> f32
{
    JPH_SliderConstraint_GetLimitsMax(
        constraint
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_SliderConstraint_HasLimits(
    constraint: *mut JPH_SliderConstraint
) -> bool
{
    JPH_SliderConstraint_HasLimits(
        constraint
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_SliderConstraint_GetLimitsSpringSettings(
    constraint: *mut JPH_SliderConstraint,
    result: *mut JPH_SpringSettings
)
{
    JPH_SliderConstraint_GetLimitsSpringSettings(
        constraint,
        result
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_SliderConstraint_SetLimitsSpringSettings(
    constraint: *mut JPH_SliderConstraint,
    settings: *mut JPH_SpringSettings
)
{
    JPH_SliderConstraint_SetLimitsSpringSettings(
        constraint,
        settings
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_SliderConstraint_GetTotalLambdaPosition(
    constraint: *const JPH_SliderConstraint,
    x: *mut f32,
    y: *mut f32
)
{
    JPH_SliderConstraint_GetTotalLambdaPosition(
        constraint,
        x,
        y
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_SliderConstraint_GetTotalLambdaPositionLimits(
    constraint: *const JPH_SliderConstraint
) -> f32
{
    JPH_SliderConstraint_GetTotalLambdaPositionLimits(
        constraint
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_SliderConstraint_GetTotalLambdaRotation(
    constraint: *const JPH_SliderConstraint,
    result: *mut JPH_Vec3
)
{
    JPH_SliderConstraint_GetTotalLambdaRotation(
        constraint,
        result
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_SliderConstraint_GetTotalLambdaMotor(
    constraint: *const JPH_SliderConstraint
) -> f32
{
    JPH_SliderConstraint_GetTotalLambdaMotor(
        constraint
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_ConeConstraintSettings_Create(

) -> *mut JPH_ConeConstraintSettings
{
    JPH_ConeConstraintSettings_Create(

    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_ConeConstraintSettings_GetPoint1(
    settings: *mut JPH_ConeConstraintSettings,
    result: *mut JPH_RVec3
)
{
    JPH_ConeConstraintSettings_GetPoint1(
        settings,
        result
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_ConeConstraintSettings_SetPoint1(
    settings: *mut JPH_ConeConstraintSettings,
    value: *const JPH_RVec3
)
{
    JPH_ConeConstraintSettings_SetPoint1(
        settings,
        value
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_ConeConstraintSettings_GetPoint2(
    settings: *mut JPH_ConeConstraintSettings,
    result: *mut JPH_RVec3
)
{
    JPH_ConeConstraintSettings_GetPoint2(
        settings,
        result
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_ConeConstraintSettings_SetPoint2(
    settings: *mut JPH_ConeConstraintSettings,
    value: *const JPH_RVec3
)
{
    JPH_ConeConstraintSettings_SetPoint2(
        settings,
        value
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_ConeConstraintSettings_SetTwistAxis1(
    settings: *mut JPH_ConeConstraintSettings,
    value: *const JPH_Vec3
)
{
    JPH_ConeConstraintSettings_SetTwistAxis1(
        settings,
        value
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_ConeConstraintSettings_GetTwistAxis1(
    settings: *mut JPH_ConeConstraintSettings,
    result: *mut JPH_Vec3
)
{
    JPH_ConeConstraintSettings_GetTwistAxis1(
        settings,
        result
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_ConeConstraintSettings_SetTwistAxis2(
    settings: *mut JPH_ConeConstraintSettings,
    value: *const JPH_Vec3
)
{
    JPH_ConeConstraintSettings_SetTwistAxis2(
        settings,
        value
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_ConeConstraintSettings_GetTwistAxis2(
    settings: *mut JPH_ConeConstraintSettings,
    result: *mut JPH_Vec3
)
{
    JPH_ConeConstraintSettings_GetTwistAxis2(
        settings,
        result
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_ConeConstraintSettings_SetHalfConeAngle(
    settings: *mut JPH_ConeConstraintSettings,
    halfConeAngle: f32
)
{
    JPH_ConeConstraintSettings_SetHalfConeAngle(
        settings,
        halfConeAngle
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_ConeConstraintSettings_GetHalfConeAngle(
    settings: *mut JPH_ConeConstraintSettings
) -> f32
{
    JPH_ConeConstraintSettings_GetHalfConeAngle(
        settings
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_ConeConstraintSettings_CreateConstraint(
    settings: *mut JPH_ConeConstraintSettings,
    body1: *mut JPH_Body,
    body2: *mut JPH_Body
) -> *mut JPH_ConeConstraint
{
    JPH_ConeConstraintSettings_CreateConstraint(
        settings,
        body1,
        body2
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_ConeConstraint_SetHalfConeAngle(
    constraint: *mut JPH_ConeConstraint,
    halfConeAngle: f32
)
{
    JPH_ConeConstraint_SetHalfConeAngle(
        constraint,
        halfConeAngle
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_ConeConstraint_GetCosHalfConeAngle(
    constraint: *const JPH_ConeConstraint
) -> f32
{
    JPH_ConeConstraint_GetCosHalfConeAngle(
        constraint
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_ConeConstraint_GetTotalLambdaPosition(
    constraint: *const JPH_ConeConstraint,
    result: *mut JPH_Vec3
)
{
    JPH_ConeConstraint_GetTotalLambdaPosition(
        constraint,
        result
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_ConeConstraint_GetTotalLambdaRotation(
    constraint: *const JPH_ConeConstraint
) -> f32
{
    JPH_ConeConstraint_GetTotalLambdaRotation(
        constraint
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_SwingTwistConstraintSettings_Create(

) -> *mut JPH_SwingTwistConstraintSettings
{
    JPH_SwingTwistConstraintSettings_Create(

    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_SwingTwistConstraintSettings_CreateConstraint(
    settings: *mut JPH_SwingTwistConstraintSettings,
    body1: *mut JPH_Body,
    body2: *mut JPH_Body
) -> *mut JPH_SwingTwistConstraint
{
    JPH_SwingTwistConstraintSettings_CreateConstraint(
        settings,
        body1,
        body2
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_SwingTwistConstraint_GetNormalHalfConeAngle(
    constraint: *mut JPH_SwingTwistConstraint
) -> f32
{
    JPH_SwingTwistConstraint_GetNormalHalfConeAngle(
        constraint
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_SwingTwistConstraint_GetTotalLambdaPosition(
    constraint: *const JPH_SwingTwistConstraint,
    result: *mut JPH_Vec3
)
{
    JPH_SwingTwistConstraint_GetTotalLambdaPosition(
        constraint,
        result
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_SwingTwistConstraint_GetTotalLambdaTwist(
    constraint: *const JPH_SwingTwistConstraint
) -> f32
{
    JPH_SwingTwistConstraint_GetTotalLambdaTwist(
        constraint
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_SwingTwistConstraint_GetTotalLambdaSwingY(
    constraint: *const JPH_SwingTwistConstraint
) -> f32
{
    JPH_SwingTwistConstraint_GetTotalLambdaSwingY(
        constraint
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_SwingTwistConstraint_GetTotalLambdaSwingZ(
    constraint: *const JPH_SwingTwistConstraint
) -> f32
{
    JPH_SwingTwistConstraint_GetTotalLambdaSwingZ(
        constraint
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_SwingTwistConstraint_GetTotalLambdaMotor(
    constraint: *const JPH_SwingTwistConstraint,
    result: *mut JPH_Vec3
)
{
    JPH_SwingTwistConstraint_GetTotalLambdaMotor(
        constraint,
        result
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_SixDOFConstraintSettings_Create(

) -> *mut JPH_SixDOFConstraintSettings
{
    JPH_SixDOFConstraintSettings_Create(

    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_SixDOFConstraintSettings_CreateConstraint(
    settings: *mut JPH_SixDOFConstraintSettings,
    body1: *mut JPH_Body,
    body2: *mut JPH_Body
) -> *mut JPH_SixDOFConstraint
{
    JPH_SixDOFConstraintSettings_CreateConstraint(
        settings,
        body1,
        body2
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_SixDOFConstraint_GetLimitsMin(
    constraint: *mut JPH_SixDOFConstraint,
    axis: JPH_SixDOFConstraintAxis
) -> f32
{
    JPH_SixDOFConstraint_GetLimitsMin(
        constraint,
        axis
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_SixDOFConstraint_GetLimitsMax(
    constraint: *mut JPH_SixDOFConstraint,
    axis: JPH_SixDOFConstraintAxis
) -> f32
{
    JPH_SixDOFConstraint_GetLimitsMax(
        constraint,
        axis
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_SixDOFConstraint_GetTotalLambdaPosition(
    constraint: *const JPH_SixDOFConstraint,
    result: *mut JPH_Vec3
)
{
    JPH_SixDOFConstraint_GetTotalLambdaPosition(
        constraint,
        result
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_SixDOFConstraint_GetTotalLambdaRotation(
    constraint: *const JPH_SixDOFConstraint,
    result: *mut JPH_Vec3
)
{
    JPH_SixDOFConstraint_GetTotalLambdaRotation(
        constraint,
        result
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_SixDOFConstraint_GetTotalLambdaMotorTranslation(
    constraint: *const JPH_SixDOFConstraint,
    result: *mut JPH_Vec3
)
{
    JPH_SixDOFConstraint_GetTotalLambdaMotorTranslation(
        constraint,
        result
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_SixDOFConstraint_GetTotalLambdaMotorRotation(
    constraint: *const JPH_SixDOFConstraint,
    result: *mut JPH_Vec3
)
{
    JPH_SixDOFConstraint_GetTotalLambdaMotorRotation(
        constraint,
        result
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_TwoBodyConstraint_GetBody1(
    constraint: *mut JPH_TwoBodyConstraint
) -> *mut JPH_Body
{
    JPH_TwoBodyConstraint_GetBody1(
        constraint
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_TwoBodyConstraint_GetBody2(
    constraint: *mut JPH_TwoBodyConstraint
) -> *mut JPH_Body
{
    JPH_TwoBodyConstraint_GetBody2(
        constraint
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_TwoBodyConstraint_GetConstraintToBody1Matrix(
    constraint: *mut JPH_TwoBodyConstraint,
    result: *mut JPH_Matrix4x4
)
{
    JPH_TwoBodyConstraint_GetConstraintToBody1Matrix(
        constraint,
        result
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_TwoBodyConstraint_GetConstraintToBody2Matrix(
    constraint: *mut JPH_TwoBodyConstraint,
    result: *mut JPH_Matrix4x4
)
{
    JPH_TwoBodyConstraint_GetConstraintToBody2Matrix(
        constraint,
        result
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_BodyInterface_DestroyBody(
    interface: *mut JPH_BodyInterface,
    bodyID: JPH_BodyID
)
{
    JPH_BodyInterface_DestroyBody(
        interface,
        bodyID
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_BodyInterface_CreateAndAddBody(
    interface: *mut JPH_BodyInterface,
    settings: *const JPH_BodyCreationSettings,
    activationMode: JPH_Activation
) -> JPH_BodyID
{
    JPH_BodyInterface_CreateAndAddBody(
        interface,
        settings,
        activationMode
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_BodyInterface_CreateBody(
    interface: *mut JPH_BodyInterface,
    settings: *const JPH_BodyCreationSettings
) -> *mut JPH_Body
{
    JPH_BodyInterface_CreateBody(
        interface,
        settings
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_BodyInterface_CreateBodyWithID(
    interface: *mut JPH_BodyInterface,
    bodyID: JPH_BodyID,
    settings: *const JPH_BodyCreationSettings
) -> *mut JPH_Body
{
    JPH_BodyInterface_CreateBodyWithID(
        interface,
        bodyID,
        settings
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_BodyInterface_CreateBodyWithoutID(
    interface: *mut JPH_BodyInterface,
    settings: *const JPH_BodyCreationSettings
) -> *mut JPH_Body
{
    JPH_BodyInterface_CreateBodyWithoutID(
        interface,
        settings
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_BodyInterface_DestroyBodyWithoutID(
    interface: *mut JPH_BodyInterface,
    body: *mut JPH_Body
)
{
    JPH_BodyInterface_DestroyBodyWithoutID(
        interface,
        body
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_BodyInterface_AssignBodyID(
    interface: *mut JPH_BodyInterface,
    body: *mut JPH_Body
) -> bool
{
    JPH_BodyInterface_AssignBodyID(
        interface,
        body
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_BodyInterface_AssignBodyID2(
    interface: *mut JPH_BodyInterface,
    body: *mut JPH_Body,
    bodyID: JPH_BodyID
) -> bool
{
    JPH_BodyInterface_AssignBodyID2(
        interface,
        body,
        bodyID
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_BodyInterface_UnassignBodyID(
    interface: *mut JPH_BodyInterface,
    bodyID: JPH_BodyID
) -> *mut JPH_Body
{
    JPH_BodyInterface_UnassignBodyID(
        interface,
        bodyID
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_BodyInterface_CreateSoftBody(
    interface: *mut JPH_BodyInterface,
    settings: *const JPH_SoftBodyCreationSettings
) -> *mut JPH_Body
{
    JPH_BodyInterface_CreateSoftBody(
        interface,
        settings
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_BodyInterface_CreateSoftBodyWithID(
    interface: *mut JPH_BodyInterface,
    bodyID: JPH_BodyID,
    settings: *const JPH_SoftBodyCreationSettings
) -> *mut JPH_Body
{
    JPH_BodyInterface_CreateSoftBodyWithID(
        interface,
        bodyID,
        settings
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_BodyInterface_CreateSoftBodyWithoutID(
    interface: *mut JPH_BodyInterface,
    settings: *const JPH_SoftBodyCreationSettings
) -> *mut JPH_Body
{
    JPH_BodyInterface_CreateSoftBodyWithoutID(
        interface,
        settings
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_BodyInterface_CreateAndAddSoftBody(
    interface: *mut JPH_BodyInterface,
    settings: *const JPH_SoftBodyCreationSettings,
    activationMode: JPH_Activation
) -> JPH_BodyID
{
    JPH_BodyInterface_CreateAndAddSoftBody(
        interface,
        settings,
        activationMode
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_BodyInterface_AddBody(
    interface: *mut JPH_BodyInterface,
    bodyID: JPH_BodyID,
    activationMode: JPH_Activation
)
{
    JPH_BodyInterface_AddBody(
        interface,
        bodyID,
        activationMode
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_BodyInterface_RemoveBody(
    interface: *mut JPH_BodyInterface,
    bodyID: JPH_BodyID
)
{
    JPH_BodyInterface_RemoveBody(
        interface,
        bodyID
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_BodyInterface_RemoveAndDestroyBody(
    interface: *mut JPH_BodyInterface,
    bodyID: JPH_BodyID
)
{
    JPH_BodyInterface_RemoveAndDestroyBody(
        interface,
        bodyID
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_BodyInterface_IsActive(
    interface: *mut JPH_BodyInterface,
    bodyID: JPH_BodyID
) -> bool
{
    JPH_BodyInterface_IsActive(
        interface,
        bodyID
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_BodyInterface_IsAdded(
    interface: *mut JPH_BodyInterface,
    bodyID: JPH_BodyID
) -> bool
{
    JPH_BodyInterface_IsAdded(
        interface,
        bodyID
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_BodyInterface_GetBodyType(
    interface: *mut JPH_BodyInterface,
    bodyID: JPH_BodyID
) -> JPH_BodyType
{
    JPH_BodyInterface_GetBodyType(
        interface,
        bodyID
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_BodyInterface_SetLinearVelocity(
    interface: *mut JPH_BodyInterface,
    bodyID: JPH_BodyID,
    velocity: *const JPH_Vec3
)
{
    JPH_BodyInterface_SetLinearVelocity(
        interface,
        bodyID,
        velocity
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_BodyInterface_GetLinearVelocity(
    interface: *mut JPH_BodyInterface,
    bodyID: JPH_BodyID,
    velocity: *mut JPH_Vec3
)
{
    JPH_BodyInterface_GetLinearVelocity(
        interface,
        bodyID,
        velocity
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_BodyInterface_GetCenterOfMassPosition(
    interface: *mut JPH_BodyInterface,
    bodyID: JPH_BodyID,
    position: *mut JPH_RVec3
)
{
    JPH_BodyInterface_GetCenterOfMassPosition(
        interface,
        bodyID,
        position
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_BodyInterface_GetMotionType(
    interface: *mut JPH_BodyInterface,
    bodyID: JPH_BodyID
) -> JPH_MotionType
{
    JPH_BodyInterface_GetMotionType(
        interface,
        bodyID
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_BodyInterface_SetMotionType(
    interface: *mut JPH_BodyInterface,
    bodyID: JPH_BodyID,
    motionType: JPH_MotionType,
    activationMode: JPH_Activation
)
{
    JPH_BodyInterface_SetMotionType(
        interface,
        bodyID,
        motionType,
        activationMode
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_BodyInterface_GetRestitution(
    interface: *const JPH_BodyInterface,
    bodyID: JPH_BodyID
) -> f32
{
    JPH_BodyInterface_GetRestitution(
        interface,
        bodyID
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_BodyInterface_SetRestitution(
    interface: *mut JPH_BodyInterface,
    bodyID: JPH_BodyID,
    restitution: f32
)
{
    JPH_BodyInterface_SetRestitution(
        interface,
        bodyID,
        restitution
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_BodyInterface_GetFriction(
    interface: *const JPH_BodyInterface,
    bodyID: JPH_BodyID
) -> f32
{
    JPH_BodyInterface_GetFriction(
        interface,
        bodyID
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_BodyInterface_SetFriction(
    interface: *mut JPH_BodyInterface,
    bodyID: JPH_BodyID,
    friction: f32
)
{
    JPH_BodyInterface_SetFriction(
        interface,
        bodyID,
        friction
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_BodyInterface_SetPosition(
    interface: *mut JPH_BodyInterface,
    bodyId: JPH_BodyID,
    position: *mut JPH_RVec3,
    activationMode: JPH_Activation
)
{
    JPH_BodyInterface_SetPosition(
        interface,
        bodyId,
        position,
        activationMode
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_BodyInterface_GetPosition(
    interface: *mut JPH_BodyInterface,
    bodyId: JPH_BodyID,
    result: *mut JPH_RVec3
)
{
    JPH_BodyInterface_GetPosition(
        interface,
        bodyId,
        result
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_BodyInterface_SetRotation(
    interface: *mut JPH_BodyInterface,
    bodyId: JPH_BodyID,
    rotation: *mut JPH_Quat,
    activationMode: JPH_Activation
)
{
    JPH_BodyInterface_SetRotation(
        interface,
        bodyId,
        rotation,
        activationMode
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_BodyInterface_GetRotation(
    interface: *mut JPH_BodyInterface,
    bodyId: JPH_BodyID,
    result: *mut JPH_Quat
)
{
    JPH_BodyInterface_GetRotation(
        interface,
        bodyId,
        result
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_BodyInterface_SetPositionAndRotation(
    interface: *mut JPH_BodyInterface,
    bodyId: JPH_BodyID,
    position: *mut JPH_RVec3,
    rotation: *mut JPH_Quat,
    activationMode: JPH_Activation
)
{
    JPH_BodyInterface_SetPositionAndRotation(
        interface,
        bodyId,
        position,
        rotation,
        activationMode
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_BodyInterface_SetPositionAndRotationWhenChanged(
    interface: *mut JPH_BodyInterface,
    bodyId: JPH_BodyID,
    position: *mut JPH_RVec3,
    rotation: *mut JPH_Quat,
    activationMode: JPH_Activation
)
{
    JPH_BodyInterface_SetPositionAndRotationWhenChanged(
        interface,
        bodyId,
        position,
        rotation,
        activationMode
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_BodyInterface_GetPositionAndRotation(
    interface: *mut JPH_BodyInterface,
    bodyId: JPH_BodyID,
    position: *mut JPH_RVec3,
    rotation: *mut JPH_Quat
)
{
    JPH_BodyInterface_GetPositionAndRotation(
        interface,
        bodyId,
        position,
        rotation
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_BodyInterface_SetPositionRotationAndVelocity(
    interface: *mut JPH_BodyInterface,
    bodyId: JPH_BodyID,
    position: *mut JPH_RVec3,
    rotation: *mut JPH_Quat,
    linearVelocity: *mut JPH_Vec3,
    angularVelocity: *mut JPH_Vec3
)
{
    JPH_BodyInterface_SetPositionRotationAndVelocity(
        interface,
        bodyId,
        position,
        rotation,
        linearVelocity,
        angularVelocity
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_BodyInterface_GetShape(
    interface: *mut JPH_BodyInterface,
    bodyId: JPH_BodyID
) -> *const JPH_Shape
{
    JPH_BodyInterface_GetShape(
        interface,
        bodyId
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_BodyInterface_SetShape(
    interface: *mut JPH_BodyInterface,
    bodyId: JPH_BodyID,
    shape: *const JPH_Shape,
    updateMassProperties: bool,
    activationMode: JPH_Activation
)
{
    JPH_BodyInterface_SetShape(
        interface,
        bodyId,
        shape,
        updateMassProperties,
        activationMode
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_BodyInterface_NotifyShapeChanged(
    interface: *mut JPH_BodyInterface,
    bodyId: JPH_BodyID,
    previousCenterOfMass: *mut JPH_Vec3,
    updateMassProperties: bool,
    activationMode: JPH_Activation
)
{
    JPH_BodyInterface_NotifyShapeChanged(
        interface,
        bodyId,
        previousCenterOfMass,
        updateMassProperties,
        activationMode
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_BodyInterface_ActivateBody(
    interface: *mut JPH_BodyInterface,
    bodyId: JPH_BodyID
)
{
    JPH_BodyInterface_ActivateBody(
        interface,
        bodyId
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_BodyInterface_DeactivateBody(
    interface: *mut JPH_BodyInterface,
    bodyId: JPH_BodyID
)
{
    JPH_BodyInterface_DeactivateBody(
        interface,
        bodyId
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_BodyInterface_GetObjectLayer(
    interface: *mut JPH_BodyInterface,
    bodyId: JPH_BodyID
) -> JPH_ObjectLayer
{
    JPH_BodyInterface_GetObjectLayer(
        interface,
        bodyId
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_BodyInterface_SetObjectLayer(
    interface: *mut JPH_BodyInterface,
    bodyId: JPH_BodyID,
    layer: JPH_ObjectLayer
)
{
    JPH_BodyInterface_SetObjectLayer(
        interface,
        bodyId,
        layer
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_BodyInterface_GetWorldTransform(
    interface: *mut JPH_BodyInterface,
    bodyId: JPH_BodyID,
    result: *mut JPH_RMatrix4x4
)
{
    JPH_BodyInterface_GetWorldTransform(
        interface,
        bodyId,
        result
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_BodyInterface_GetCenterOfMassTransform(
    interface: *mut JPH_BodyInterface,
    bodyId: JPH_BodyID,
    result: *mut JPH_RMatrix4x4
)
{
    JPH_BodyInterface_GetCenterOfMassTransform(
        interface,
        bodyId,
        result
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_BodyInterface_MoveKinematic(
    interface: *mut JPH_BodyInterface,
    bodyId: JPH_BodyID,
    targetPosition: *mut JPH_RVec3,
    targetRotation: *mut JPH_Quat,
    deltaTime: f32
)
{
    JPH_BodyInterface_MoveKinematic(
        interface,
        bodyId,
        targetPosition,
        targetRotation,
        deltaTime
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_BodyInterface_ApplyBuoyancyImpulse(
    interface: *mut JPH_BodyInterface,
    bodyId: JPH_BodyID,
    surfacePosition: *const JPH_RVec3,
    surfaceNormal: *const JPH_Vec3,
    buoyancy: f32,
    linearDrag: f32,
    angularDrag: f32,
    fluidVelocity: *const JPH_Vec3,
    gravity: *const JPH_Vec3,
    deltaTime: f32
) -> bool
{
    JPH_BodyInterface_ApplyBuoyancyImpulse(
        interface,
        bodyId,
        surfacePosition,
        surfaceNormal,
        buoyancy,
        linearDrag,
        angularDrag,
        fluidVelocity,
        gravity,
        deltaTime
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_BodyInterface_SetLinearAndAngularVelocity(
    interface: *mut JPH_BodyInterface,
    bodyId: JPH_BodyID,
    linearVelocity: *mut JPH_Vec3,
    angularVelocity: *mut JPH_Vec3
)
{
    JPH_BodyInterface_SetLinearAndAngularVelocity(
        interface,
        bodyId,
        linearVelocity,
        angularVelocity
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_BodyInterface_GetLinearAndAngularVelocity(
    interface: *mut JPH_BodyInterface,
    bodyId: JPH_BodyID,
    linearVelocity: *mut JPH_Vec3,
    angularVelocity: *mut JPH_Vec3
)
{
    JPH_BodyInterface_GetLinearAndAngularVelocity(
        interface,
        bodyId,
        linearVelocity,
        angularVelocity
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_BodyInterface_AddLinearVelocity(
    interface: *mut JPH_BodyInterface,
    bodyId: JPH_BodyID,
    linearVelocity: *mut JPH_Vec3
)
{
    JPH_BodyInterface_AddLinearVelocity(
        interface,
        bodyId,
        linearVelocity
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_BodyInterface_AddLinearAndAngularVelocity(
    interface: *mut JPH_BodyInterface,
    bodyId: JPH_BodyID,
    linearVelocity: *mut JPH_Vec3,
    angularVelocity: *mut JPH_Vec3
)
{
    JPH_BodyInterface_AddLinearAndAngularVelocity(
        interface,
        bodyId,
        linearVelocity,
        angularVelocity
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_BodyInterface_SetAngularVelocity(
    interface: *mut JPH_BodyInterface,
    bodyId: JPH_BodyID,
    angularVelocity: *mut JPH_Vec3
)
{
    JPH_BodyInterface_SetAngularVelocity(
        interface,
        bodyId,
        angularVelocity
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_BodyInterface_GetAngularVelocity(
    interface: *mut JPH_BodyInterface,
    bodyId: JPH_BodyID,
    angularVelocity: *mut JPH_Vec3
)
{
    JPH_BodyInterface_GetAngularVelocity(
        interface,
        bodyId,
        angularVelocity
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_BodyInterface_GetPointVelocity(
    interface: *mut JPH_BodyInterface,
    bodyId: JPH_BodyID,
    point: *mut JPH_RVec3,
    velocity: *mut JPH_Vec3
)
{
    JPH_BodyInterface_GetPointVelocity(
        interface,
        bodyId,
        point,
        velocity
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_BodyInterface_AddForce(
    interface: *mut JPH_BodyInterface,
    bodyId: JPH_BodyID,
    force: *mut JPH_Vec3
)
{
    JPH_BodyInterface_AddForce(
        interface,
        bodyId,
        force
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_BodyInterface_AddForce2(
    interface: *mut JPH_BodyInterface,
    bodyId: JPH_BodyID,
    force: *mut JPH_Vec3,
    point: *mut JPH_RVec3
)
{
    JPH_BodyInterface_AddForce2(
        interface,
        bodyId,
        force,
        point
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_BodyInterface_AddTorque(
    interface: *mut JPH_BodyInterface,
    bodyId: JPH_BodyID,
    torque: *mut JPH_Vec3
)
{
    JPH_BodyInterface_AddTorque(
        interface,
        bodyId,
        torque
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_BodyInterface_AddForceAndTorque(
    interface: *mut JPH_BodyInterface,
    bodyId: JPH_BodyID,
    force: *mut JPH_Vec3,
    torque: *mut JPH_Vec3
)
{
    JPH_BodyInterface_AddForceAndTorque(
        interface,
        bodyId,
        force,
        torque
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_BodyInterface_AddImpulse(
    interface: *mut JPH_BodyInterface,
    bodyId: JPH_BodyID,
    impulse: *mut JPH_Vec3
)
{
    JPH_BodyInterface_AddImpulse(
        interface,
        bodyId,
        impulse
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_BodyInterface_AddImpulse2(
    interface: *mut JPH_BodyInterface,
    bodyId: JPH_BodyID,
    impulse: *mut JPH_Vec3,
    point: *mut JPH_RVec3
)
{
    JPH_BodyInterface_AddImpulse2(
        interface,
        bodyId,
        impulse,
        point
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_BodyInterface_AddAngularImpulse(
    interface: *mut JPH_BodyInterface,
    bodyId: JPH_BodyID,
    angularImpulse: *mut JPH_Vec3
)
{
    JPH_BodyInterface_AddAngularImpulse(
        interface,
        bodyId,
        angularImpulse
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_BodyInterface_SetMotionQuality(
    interface: *mut JPH_BodyInterface,
    bodyId: JPH_BodyID,
    quality: JPH_MotionQuality
)
{
    JPH_BodyInterface_SetMotionQuality(
        interface,
        bodyId,
        quality
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_BodyInterface_GetMotionQuality(
    interface: *mut JPH_BodyInterface,
    bodyId: JPH_BodyID
) -> JPH_MotionQuality
{
    JPH_BodyInterface_GetMotionQuality(
        interface,
        bodyId
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_BodyInterface_GetInverseInertia(
    interface: *mut JPH_BodyInterface,
    bodyId: JPH_BodyID,
    result: *mut JPH_Matrix4x4
)
{
    JPH_BodyInterface_GetInverseInertia(
        interface,
        bodyId,
        result
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_BodyInterface_SetGravityFactor(
    interface: *mut JPH_BodyInterface,
    bodyId: JPH_BodyID,
    gravityFactor: f32
)
{
    JPH_BodyInterface_SetGravityFactor(
        interface,
        bodyId,
        gravityFactor
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_BodyInterface_GetGravityFactor(
    interface: *mut JPH_BodyInterface,
    bodyId: JPH_BodyID
) -> f32
{
    JPH_BodyInterface_GetGravityFactor(
        interface,
        bodyId
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_BodyInterface_InvalidateContactCache(
    interface: *mut JPH_BodyInterface,
    bodyId: JPH_BodyID
)
{
    JPH_BodyInterface_InvalidateContactCache(
        interface,
        bodyId
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_BodyInterface_SetUserData(
    interface: *mut JPH_BodyInterface,
    bodyId: JPH_BodyID,
    inUserData: u64
)
{
    JPH_BodyInterface_SetUserData(
        interface,
        bodyId,
        inUserData
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_BodyInterface_GetUserData(
    interface: *mut JPH_BodyInterface,
    bodyId: JPH_BodyID
) -> u64
{
    JPH_BodyInterface_GetUserData(
        interface,
        bodyId
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_BodyLockInterface_LockRead(
    lockInterface: *const JPH_BodyLockInterface,
    bodyID: JPH_BodyID,
    outLock: *mut JPH_BodyLockRead
)
{
    JPH_BodyLockInterface_LockRead(
        lockInterface,
        bodyID,
        outLock
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_BodyLockInterface_UnlockRead(
    lockInterface: *const JPH_BodyLockInterface,
    ioLock: *mut JPH_BodyLockRead
)
{
    JPH_BodyLockInterface_UnlockRead(
        lockInterface,
        ioLock
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_BodyLockInterface_LockWrite(
    lockInterface: *const JPH_BodyLockInterface,
    bodyID: JPH_BodyID,
    outLock: *mut JPH_BodyLockWrite
)
{
    JPH_BodyLockInterface_LockWrite(
        lockInterface,
        bodyID,
        outLock
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_BodyLockInterface_UnlockWrite(
    lockInterface: *const JPH_BodyLockInterface,
    ioLock: *mut JPH_BodyLockWrite
)
{
    JPH_BodyLockInterface_UnlockWrite(
        lockInterface,
        ioLock
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_MotionProperties_GetAllowedDOFs(
    properties: *const JPH_MotionProperties
) -> JPH_AllowedDOFs
{
    JPH_MotionProperties_GetAllowedDOFs(
        properties
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_MotionProperties_SetLinearDamping(
    properties: *mut JPH_MotionProperties,
    damping: f32
)
{
    JPH_MotionProperties_SetLinearDamping(
        properties,
        damping
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_MotionProperties_GetLinearDamping(
    properties: *const JPH_MotionProperties
) -> f32
{
    JPH_MotionProperties_GetLinearDamping(
        properties
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_MotionProperties_SetAngularDamping(
    properties: *mut JPH_MotionProperties,
    damping: f32
)
{
    JPH_MotionProperties_SetAngularDamping(
        properties,
        damping
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_MotionProperties_GetAngularDamping(
    properties: *const JPH_MotionProperties
) -> f32
{
    JPH_MotionProperties_GetAngularDamping(
        properties
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_MotionProperties_SetMassProperties(
    properties: *mut JPH_MotionProperties,
    allowedDOFs: JPH_AllowedDOFs,
    massProperties: *const JPH_MassProperties
)
{
    JPH_MotionProperties_SetMassProperties(
        properties,
        allowedDOFs,
        massProperties
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_MotionProperties_GetInverseMassUnchecked(
    properties: *mut JPH_MotionProperties
) -> f32
{
    JPH_MotionProperties_GetInverseMassUnchecked(
        properties
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_MotionProperties_SetInverseMass(
    properties: *mut JPH_MotionProperties,
    inverseMass: f32
)
{
    JPH_MotionProperties_SetInverseMass(
        properties,
        inverseMass
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_MotionProperties_GetInverseInertiaDiagonal(
    properties: *mut JPH_MotionProperties,
    result: *mut JPH_Vec3
)
{
    JPH_MotionProperties_GetInverseInertiaDiagonal(
        properties,
        result
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_MotionProperties_GetInertiaRotation(
    properties: *mut JPH_MotionProperties,
    result: *mut JPH_Quat
)
{
    JPH_MotionProperties_GetInertiaRotation(
        properties,
        result
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_MotionProperties_SetInverseInertia(
    properties: *mut JPH_MotionProperties,
    diagonal: *mut JPH_Vec3,
    rot: *mut JPH_Quat
)
{
    JPH_MotionProperties_SetInverseInertia(
        properties,
        diagonal,
        rot
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_MassProperties_DecomposePrincipalMomentsOfInertia(
    properties: *mut JPH_MassProperties,
    rotation: *mut JPH_Matrix4x4,
    diagonal: *mut JPH_Vec3
)
{
    JPH_MassProperties_DecomposePrincipalMomentsOfInertia(
        properties,
        rotation,
        diagonal
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_MassProperties_ScaleToMass(
    properties: *mut JPH_MassProperties,
    mass: f32
)
{
    JPH_MassProperties_ScaleToMass(
        properties,
        mass
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_MassProperties_GetEquivalentSolidBoxSize(
    mass: f32,
    inertiaDiagonal: *const JPH_Vec3,
    result: *mut JPH_Vec3
)
{
    JPH_MassProperties_GetEquivalentSolidBoxSize(
        mass,
        inertiaDiagonal,
        result
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_CollideShapeSettings_Init(
    settings: *mut JPH_CollideShapeSettings
)
{
    JPH_CollideShapeSettings_Init(
        settings
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_ShapeCastSettings_Init(
    settings: *mut JPH_ShapeCastSettings
)
{
    JPH_ShapeCastSettings_Init(
        settings
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_BroadPhaseQuery_CastRay(
    query: *const JPH_BroadPhaseQuery,
    origin: *const JPH_Vec3,
    direction: *const JPH_Vec3,
    callback: JPH_RayCastBodyCollector,
    userData: *mut c_void,
    broadPhaseLayerFilter: *mut JPH_BroadPhaseLayerFilter,
    objectLayerFilter: *mut JPH_ObjectLayerFilter
) -> bool
{
    JPH_BroadPhaseQuery_CastRay(
        query,
        origin,
        direction,
        callback,
        userData,
        broadPhaseLayerFilter,
        objectLayerFilter
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_BroadPhaseQuery_CastRay2(
    query: *const JPH_BroadPhaseQuery,
    origin: *const JPH_Vec3,
    direction: *const JPH_Vec3,
    collectorType: JPH_CollisionCollectorType,
    callback: JPH_RayCastBodyResultCallback,
    userData: *mut c_void,
    broadPhaseLayerFilter: *mut JPH_BroadPhaseLayerFilter,
    objectLayerFilter: *mut JPH_ObjectLayerFilter
) -> bool
{
    JPH_BroadPhaseQuery_CastRay2(
        query,
        origin,
        direction,
        collectorType,
        callback,
        userData,
        broadPhaseLayerFilter,
        objectLayerFilter
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_BroadPhaseQuery_CollideAABox(
    query: *const JPH_BroadPhaseQuery,
    box_: *const JPH_AABox,
    callback: JPH_CollideShapeBodyCollector,
    userData: *mut c_void,
    broadPhaseLayerFilter: *mut JPH_BroadPhaseLayerFilter,
    objectLayerFilter: *mut JPH_ObjectLayerFilter
) -> bool
{
    JPH_BroadPhaseQuery_CollideAABox(
        query,
        box_,
        callback,
        userData,
        broadPhaseLayerFilter,
        objectLayerFilter
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_BroadPhaseQuery_CollideSphere(
    query: *const JPH_BroadPhaseQuery,
    center: *const JPH_Vec3,
    radius: f32,
    callback: JPH_CollideShapeBodyCollector,
    userData: *mut c_void,
    broadPhaseLayerFilter: *mut JPH_BroadPhaseLayerFilter,
    objectLayerFilter: *mut JPH_ObjectLayerFilter
) -> bool
{
    JPH_BroadPhaseQuery_CollideSphere(
        query,
        center,
        radius,
        callback,
        userData,
        broadPhaseLayerFilter,
        objectLayerFilter
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_BroadPhaseQuery_CollidePoint(
    query: *const JPH_BroadPhaseQuery,
    point: *const JPH_Vec3,
    callback: JPH_CollideShapeBodyCollector,
    userData: *mut c_void,
    broadPhaseLayerFilter: *mut JPH_BroadPhaseLayerFilter,
    objectLayerFilter: *mut JPH_ObjectLayerFilter
) -> bool
{
    JPH_BroadPhaseQuery_CollidePoint(
        query,
        point,
        callback,
        userData,
        broadPhaseLayerFilter,
        objectLayerFilter
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_NarrowPhaseQuery_CastRay(
    query: *const JPH_NarrowPhaseQuery,
    origin: *const JPH_RVec3,
    direction: *const JPH_Vec3,
    hit: *mut JPH_RayCastResult,
    broadPhaseLayerFilter: *mut JPH_BroadPhaseLayerFilter,
    objectLayerFilter: *mut JPH_ObjectLayerFilter,
    bodyFilter: *mut JPH_BodyFilter
) -> bool
{
    JPH_NarrowPhaseQuery_CastRay(
        query,
        origin,
        direction,
        hit,
        broadPhaseLayerFilter,
        objectLayerFilter,
        bodyFilter
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_NarrowPhaseQuery_CastRay2(
    query: *const JPH_NarrowPhaseQuery,
    origin: *const JPH_RVec3,
    direction: *const JPH_Vec3,
    rayCastSettings: *const JPH_RayCastSettings,
    callback: JPH_CastRayCollector,
    userData: *mut c_void,
    broadPhaseLayerFilter: *mut JPH_BroadPhaseLayerFilter,
    objectLayerFilter: *mut JPH_ObjectLayerFilter,
    bodyFilter: *mut JPH_BodyFilter,
    shapeFilter: *mut JPH_ShapeFilter
) -> bool
{
    JPH_NarrowPhaseQuery_CastRay2(
        query,
        origin,
        direction,
        rayCastSettings,
        callback,
        userData,
        broadPhaseLayerFilter,
        objectLayerFilter,
        bodyFilter,
        shapeFilter
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_NarrowPhaseQuery_CastRay3(
    query: *const JPH_NarrowPhaseQuery,
    origin: *const JPH_RVec3,
    direction: *const JPH_Vec3,
    rayCastSettings: *const JPH_RayCastSettings,
    collectorType: JPH_CollisionCollectorType,
    callback: JPH_CastRayResultCallback,
    userData: *mut c_void,
    broadPhaseLayerFilter: *mut JPH_BroadPhaseLayerFilter,
    objectLayerFilter: *mut JPH_ObjectLayerFilter,
    bodyFilter: *mut JPH_BodyFilter,
    shapeFilter: *mut JPH_ShapeFilter
) -> bool
{
    JPH_NarrowPhaseQuery_CastRay3(
        query,
        origin,
        direction,
        rayCastSettings,
        collectorType,
        callback,
        userData,
        broadPhaseLayerFilter,
        objectLayerFilter,
        bodyFilter,
        shapeFilter
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_NarrowPhaseQuery_CollidePoint(
    query: *const JPH_NarrowPhaseQuery,
    point: *const JPH_RVec3,
    callback: JPH_CollidePointCollector,
    userData: *mut c_void,
    broadPhaseLayerFilter: *mut JPH_BroadPhaseLayerFilter,
    objectLayerFilter: *mut JPH_ObjectLayerFilter,
    bodyFilter: *mut JPH_BodyFilter,
    shapeFilter: *mut JPH_ShapeFilter
) -> bool
{
    JPH_NarrowPhaseQuery_CollidePoint(
        query,
        point,
        callback,
        userData,
        broadPhaseLayerFilter,
        objectLayerFilter,
        bodyFilter,
        shapeFilter
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_NarrowPhaseQuery_CollidePoint2(
    query: *const JPH_NarrowPhaseQuery,
    point: *const JPH_RVec3,
    collectorType: JPH_CollisionCollectorType,
    callback: JPH_CollidePointResultCallback,
    userData: *mut c_void,
    broadPhaseLayerFilter: *mut JPH_BroadPhaseLayerFilter,
    objectLayerFilter: *mut JPH_ObjectLayerFilter,
    bodyFilter: *mut JPH_BodyFilter,
    shapeFilter: *mut JPH_ShapeFilter
) -> bool
{
    JPH_NarrowPhaseQuery_CollidePoint2(
        query,
        point,
        collectorType,
        callback,
        userData,
        broadPhaseLayerFilter,
        objectLayerFilter,
        bodyFilter,
        shapeFilter
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_NarrowPhaseQuery_CollideShape(
    query: *const JPH_NarrowPhaseQuery,
    shape: *const JPH_Shape,
    scale: *const JPH_Vec3,
    centerOfMassTransform: *const JPH_RMatrix4x4,
    settings: *const JPH_CollideShapeSettings,
    baseOffset: *mut JPH_RVec3,
    callback: JPH_CollideShapeCollector,
    userData: *mut c_void,
    broadPhaseLayerFilter: *mut JPH_BroadPhaseLayerFilter,
    objectLayerFilter: *mut JPH_ObjectLayerFilter,
    bodyFilter: *mut JPH_BodyFilter,
    shapeFilter: *mut JPH_ShapeFilter
) -> bool
{
    JPH_NarrowPhaseQuery_CollideShape(
        query,
        shape,
        scale,
        centerOfMassTransform,
        settings,
        baseOffset,
        callback,
        userData,
        broadPhaseLayerFilter,
        objectLayerFilter,
        bodyFilter,
        shapeFilter
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_NarrowPhaseQuery_CollideShape2(
    query: *const JPH_NarrowPhaseQuery,
    shape: *const JPH_Shape,
    scale: *const JPH_Vec3,
    centerOfMassTransform: *const JPH_RMatrix4x4,
    settings: *const JPH_CollideShapeSettings,
    baseOffset: *mut JPH_RVec3,
    collectorType: JPH_CollisionCollectorType,
    callback: JPH_CollideShapeResultCallback,
    userData: *mut c_void,
    broadPhaseLayerFilter: *mut JPH_BroadPhaseLayerFilter,
    objectLayerFilter: *mut JPH_ObjectLayerFilter,
    bodyFilter: *mut JPH_BodyFilter,
    shapeFilter: *mut JPH_ShapeFilter
) -> bool
{
    JPH_NarrowPhaseQuery_CollideShape2(
        query,
        shape,
        scale,
        centerOfMassTransform,
        settings,
        baseOffset,
        collectorType,
        callback,
        userData,
        broadPhaseLayerFilter,
        objectLayerFilter,
        bodyFilter,
        shapeFilter
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_NarrowPhaseQuery_CastShape(
    query: *const JPH_NarrowPhaseQuery,
    shape: *const JPH_Shape,
    worldTransform: *const JPH_RMatrix4x4,
    direction: *const JPH_Vec3,
    settings: *const JPH_ShapeCastSettings,
    baseOffset: *mut JPH_RVec3,
    callback: JPH_CastShapeCollector,
    userData: *mut c_void,
    broadPhaseLayerFilter: *mut JPH_BroadPhaseLayerFilter,
    objectLayerFilter: *mut JPH_ObjectLayerFilter,
    bodyFilter: *mut JPH_BodyFilter,
    shapeFilter: *mut JPH_ShapeFilter
) -> bool
{
    JPH_NarrowPhaseQuery_CastShape(
        query,
        shape,
        worldTransform,
        direction,
        settings,
        baseOffset,
        callback,
        userData,
        broadPhaseLayerFilter,
        objectLayerFilter,
        bodyFilter,
        shapeFilter
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_NarrowPhaseQuery_CastShape2(
    query: *const JPH_NarrowPhaseQuery,
    shape: *const JPH_Shape,
    worldTransform: *const JPH_RMatrix4x4,
    direction: *const JPH_Vec3,
    settings: *const JPH_ShapeCastSettings,
    baseOffset: *mut JPH_RVec3,
    collectorType: JPH_CollisionCollectorType,
    callback: JPH_CastShapeResultCallback,
    userData: *mut c_void,
    broadPhaseLayerFilter: *mut JPH_BroadPhaseLayerFilter,
    objectLayerFilter: *mut JPH_ObjectLayerFilter,
    bodyFilter: *mut JPH_BodyFilter,
    shapeFilter: *mut JPH_ShapeFilter
) -> bool
{
    JPH_NarrowPhaseQuery_CastShape2(
        query,
        shape,
        worldTransform,
        direction,
        settings,
        baseOffset,
        collectorType,
        callback,
        userData,
        broadPhaseLayerFilter,
        objectLayerFilter,
        bodyFilter,
        shapeFilter
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_Body_GetID(
    body: *const JPH_Body
) -> JPH_BodyID
{
    JPH_Body_GetID(
        body
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_Body_GetBodyType(
    body: *const JPH_Body
) -> JPH_BodyType
{
    JPH_Body_GetBodyType(
        body
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_Body_IsRigidBody(
    body: *const JPH_Body
) -> bool
{
    JPH_Body_IsRigidBody(
        body
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_Body_IsSoftBody(
    body: *const JPH_Body
) -> bool
{
    JPH_Body_IsSoftBody(
        body
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_Body_IsActive(
    body: *const JPH_Body
) -> bool
{
    JPH_Body_IsActive(
        body
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_Body_IsStatic(
    body: *const JPH_Body
) -> bool
{
    JPH_Body_IsStatic(
        body
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_Body_IsKinematic(
    body: *const JPH_Body
) -> bool
{
    JPH_Body_IsKinematic(
        body
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_Body_IsDynamic(
    body: *const JPH_Body
) -> bool
{
    JPH_Body_IsDynamic(
        body
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_Body_CanBeKinematicOrDynamic(
    body: *const JPH_Body
) -> bool
{
    JPH_Body_CanBeKinematicOrDynamic(
        body
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_Body_SetIsSensor(
    body: *mut JPH_Body,
    value: bool
)
{
    JPH_Body_SetIsSensor(
        body,
        value
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_Body_IsSensor(
    body: *const JPH_Body
) -> bool
{
    JPH_Body_IsSensor(
        body
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_Body_SetCollideKinematicVsNonDynamic(
    body: *mut JPH_Body,
    value: bool
)
{
    JPH_Body_SetCollideKinematicVsNonDynamic(
        body,
        value
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_Body_GetCollideKinematicVsNonDynamic(
    body: *const JPH_Body
) -> bool
{
    JPH_Body_GetCollideKinematicVsNonDynamic(
        body
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_Body_SetUseManifoldReduction(
    body: *mut JPH_Body,
    value: bool
)
{
    JPH_Body_SetUseManifoldReduction(
        body,
        value
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_Body_GetUseManifoldReduction(
    body: *const JPH_Body
) -> bool
{
    JPH_Body_GetUseManifoldReduction(
        body
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_Body_GetUseManifoldReductionWithBody(
    body: *const JPH_Body,
    other: *const JPH_Body
) -> bool
{
    JPH_Body_GetUseManifoldReductionWithBody(
        body,
        other
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_Body_SetApplyGyroscopicForce(
    body: *mut JPH_Body,
    value: bool
)
{
    JPH_Body_SetApplyGyroscopicForce(
        body,
        value
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_Body_GetApplyGyroscopicForce(
    body: *const JPH_Body
) -> bool
{
    JPH_Body_GetApplyGyroscopicForce(
        body
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_Body_SetEnhancedInternalEdgeRemoval(
    body: *mut JPH_Body,
    value: bool
)
{
    JPH_Body_SetEnhancedInternalEdgeRemoval(
        body,
        value
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_Body_GetEnhancedInternalEdgeRemoval(
    body: *const JPH_Body
) -> bool
{
    JPH_Body_GetEnhancedInternalEdgeRemoval(
        body
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_Body_GetEnhancedInternalEdgeRemovalWithBody(
    body: *const JPH_Body,
    other: *const JPH_Body
) -> bool
{
    JPH_Body_GetEnhancedInternalEdgeRemovalWithBody(
        body,
        other
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_Body_GetMotionType(
    body: *const JPH_Body
) -> JPH_MotionType
{
    JPH_Body_GetMotionType(
        body
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_Body_SetMotionType(
    body: *mut JPH_Body,
    motionType: JPH_MotionType
)
{
    JPH_Body_SetMotionType(
        body,
        motionType
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_Body_GetBroadPhaseLayer(
    body: *const JPH_Body
) -> JPH_BroadPhaseLayer
{
    JPH_Body_GetBroadPhaseLayer(
        body
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_Body_GetObjectLayer(
    body: *const JPH_Body
) -> JPH_ObjectLayer
{
    JPH_Body_GetObjectLayer(
        body
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_Body_GetAllowSleeping(
    body: *mut JPH_Body
) -> bool
{
    JPH_Body_GetAllowSleeping(
        body
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_Body_SetAllowSleeping(
    body: *mut JPH_Body,
    allowSleeping: bool
)
{
    JPH_Body_SetAllowSleeping(
        body,
        allowSleeping
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_Body_ResetSleepTimer(
    body: *mut JPH_Body
)
{
    JPH_Body_ResetSleepTimer(
        body
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_Body_GetFriction(
    body: *const JPH_Body
) -> f32
{
    JPH_Body_GetFriction(
        body
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_Body_SetFriction(
    body: *mut JPH_Body,
    friction: f32
)
{
    JPH_Body_SetFriction(
        body,
        friction
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_Body_GetRestitution(
    body: *const JPH_Body
) -> f32
{
    JPH_Body_GetRestitution(
        body
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_Body_SetRestitution(
    body: *mut JPH_Body,
    restitution: f32
)
{
    JPH_Body_SetRestitution(
        body,
        restitution
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_Body_GetLinearVelocity(
    body: *mut JPH_Body,
    velocity: *mut JPH_Vec3
)
{
    JPH_Body_GetLinearVelocity(
        body,
        velocity
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_Body_SetLinearVelocity(
    body: *mut JPH_Body,
    velocity: *const JPH_Vec3
)
{
    JPH_Body_SetLinearVelocity(
        body,
        velocity
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_Body_SetLinearVelocityClamped(
    body: *mut JPH_Body,
    velocity: *const JPH_Vec3
)
{
    JPH_Body_SetLinearVelocityClamped(
        body,
        velocity
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_Body_GetAngularVelocity(
    body: *mut JPH_Body,
    velocity: *mut JPH_Vec3
)
{
    JPH_Body_GetAngularVelocity(
        body,
        velocity
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_Body_SetAngularVelocity(
    body: *mut JPH_Body,
    velocity: *const JPH_Vec3
)
{
    JPH_Body_SetAngularVelocity(
        body,
        velocity
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_Body_SetAngularVelocityClamped(
    body: *mut JPH_Body,
    velocity: *const JPH_Vec3
)
{
    JPH_Body_SetAngularVelocityClamped(
        body,
        velocity
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_Body_GetPointVelocityCOM(
    body: *mut JPH_Body,
    pointRelativeToCOM: *const JPH_Vec3,
    velocity: *mut JPH_Vec3
)
{
    JPH_Body_GetPointVelocityCOM(
        body,
        pointRelativeToCOM,
        velocity
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_Body_GetPointVelocity(
    body: *mut JPH_Body,
    point: *const JPH_RVec3,
    velocity: *mut JPH_Vec3
)
{
    JPH_Body_GetPointVelocity(
        body,
        point,
        velocity
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_Body_AddForce(
    body: *mut JPH_Body,
    force: *const JPH_Vec3
)
{
    JPH_Body_AddForce(
        body,
        force
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_Body_AddForceAtPosition(
    body: *mut JPH_Body,
    force: *const JPH_Vec3,
    position: *const JPH_RVec3
)
{
    JPH_Body_AddForceAtPosition(
        body,
        force,
        position
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_Body_AddTorque(
    body: *mut JPH_Body,
    force: *const JPH_Vec3
)
{
    JPH_Body_AddTorque(
        body,
        force
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_Body_GetAccumulatedForce(
    body: *mut JPH_Body,
    force: *mut JPH_Vec3
)
{
    JPH_Body_GetAccumulatedForce(
        body,
        force
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_Body_GetAccumulatedTorque(
    body: *mut JPH_Body,
    force: *mut JPH_Vec3
)
{
    JPH_Body_GetAccumulatedTorque(
        body,
        force
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_Body_ResetForce(
    body: *mut JPH_Body
)
{
    JPH_Body_ResetForce(
        body
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_Body_ResetTorque(
    body: *mut JPH_Body
)
{
    JPH_Body_ResetTorque(
        body
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_Body_ResetMotion(
    body: *mut JPH_Body
)
{
    JPH_Body_ResetMotion(
        body
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_Body_GetInverseInertia(
    body: *mut JPH_Body,
    result: *mut JPH_Matrix4x4
)
{
    JPH_Body_GetInverseInertia(
        body,
        result
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_Body_AddImpulse(
    body: *mut JPH_Body,
    impulse: *const JPH_Vec3
)
{
    JPH_Body_AddImpulse(
        body,
        impulse
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_Body_AddImpulseAtPosition(
    body: *mut JPH_Body,
    impulse: *const JPH_Vec3,
    position: *const JPH_RVec3
)
{
    JPH_Body_AddImpulseAtPosition(
        body,
        impulse,
        position
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_Body_AddAngularImpulse(
    body: *mut JPH_Body,
    angularImpulse: *const JPH_Vec3
)
{
    JPH_Body_AddAngularImpulse(
        body,
        angularImpulse
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_Body_MoveKinematic(
    body: *mut JPH_Body,
    targetPosition: *mut JPH_RVec3,
    targetRotation: *mut JPH_Quat,
    deltaTime: f32
)
{
    JPH_Body_MoveKinematic(
        body,
        targetPosition,
        targetRotation,
        deltaTime
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_Body_ApplyBuoyancyImpulse(
    body: *mut JPH_Body,
    surfacePosition: *const JPH_RVec3,
    surfaceNormal: *const JPH_Vec3,
    buoyancy: f32,
    linearDrag: f32,
    angularDrag: f32,
    fluidVelocity: *const JPH_Vec3,
    gravity: *const JPH_Vec3,
    deltaTime: f32
) -> bool
{
    JPH_Body_ApplyBuoyancyImpulse(
        body,
        surfacePosition,
        surfaceNormal,
        buoyancy,
        linearDrag,
        angularDrag,
        fluidVelocity,
        gravity,
        deltaTime
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_Body_IsInBroadPhase(
    body: *mut JPH_Body
) -> bool
{
    JPH_Body_IsInBroadPhase(
        body
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_Body_IsCollisionCacheInvalid(
    body: *mut JPH_Body
) -> bool
{
    JPH_Body_IsCollisionCacheInvalid(
        body
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_Body_GetShape(
    body: *mut JPH_Body
) -> *const JPH_Shape
{
    JPH_Body_GetShape(
        body
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_Body_GetPosition(
    body: *const JPH_Body,
    result: *mut JPH_RVec3
)
{
    JPH_Body_GetPosition(
        body,
        result
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_Body_GetRotation(
    body: *const JPH_Body,
    result: *mut JPH_Quat
)
{
    JPH_Body_GetRotation(
        body,
        result
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_Body_GetWorldTransform(
    body: *const JPH_Body,
    result: *mut JPH_RMatrix4x4
)
{
    JPH_Body_GetWorldTransform(
        body,
        result
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_Body_GetCenterOfMassPosition(
    body: *const JPH_Body,
    result: *mut JPH_RVec3
)
{
    JPH_Body_GetCenterOfMassPosition(
        body,
        result
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_Body_GetCenterOfMassTransform(
    body: *const JPH_Body,
    result: *mut JPH_RMatrix4x4
)
{
    JPH_Body_GetCenterOfMassTransform(
        body,
        result
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_Body_GetInverseCenterOfMassTransform(
    body: *const JPH_Body,
    result: *mut JPH_RMatrix4x4
)
{
    JPH_Body_GetInverseCenterOfMassTransform(
        body,
        result
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_Body_GetWorldSpaceBounds(
    body: *const JPH_Body,
    result: *mut JPH_AABox
)
{
    JPH_Body_GetWorldSpaceBounds(
        body,
        result
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_Body_GetWorldSpaceSurfaceNormal(
    body: *const JPH_Body,
    subShapeID: JPH_SubShapeID,
    position: *const JPH_RVec3,
    normal: *mut JPH_Vec3
)
{
    JPH_Body_GetWorldSpaceSurfaceNormal(
        body,
        subShapeID,
        position,
        normal
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_Body_GetMotionProperties(
    body: *mut JPH_Body
) -> *mut JPH_MotionProperties
{
    JPH_Body_GetMotionProperties(
        body
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_Body_GetMotionPropertiesUnchecked(
    body: *mut JPH_Body
) -> *mut JPH_MotionProperties
{
    JPH_Body_GetMotionPropertiesUnchecked(
        body
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_Body_SetUserData(
    body: *mut JPH_Body,
    userData: u64
)
{
    JPH_Body_SetUserData(
        body,
        userData
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_Body_GetUserData(
    body: *mut JPH_Body
) -> u64
{
    JPH_Body_GetUserData(
        body
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_Body_GetFixedToWorldBody(

) -> *mut JPH_Body
{
    JPH_Body_GetFixedToWorldBody(

    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_BroadPhaseLayerFilter_Create(
    procs: JPH_BroadPhaseLayerFilter_Procs,
    userData: *mut c_void
) -> *mut JPH_BroadPhaseLayerFilter
{
    JPH_BroadPhaseLayerFilter_Create(
        procs,
        userData
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_BroadPhaseLayerFilter_Destroy(
    filter: *mut JPH_BroadPhaseLayerFilter
)
{
    JPH_BroadPhaseLayerFilter_Destroy(
        filter
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_ObjectLayerFilter_Create(
    procs: JPH_ObjectLayerFilter_Procs,
    userData: *mut c_void
) -> *mut JPH_ObjectLayerFilter
{
    JPH_ObjectLayerFilter_Create(
        procs,
        userData
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_ObjectLayerFilter_Destroy(
    filter: *mut JPH_ObjectLayerFilter
)
{
    JPH_ObjectLayerFilter_Destroy(
        filter
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_BodyFilter_Create(
    procs: JPH_BodyFilter_Procs,
    userData: *mut c_void
) -> *mut JPH_BodyFilter
{
    JPH_BodyFilter_Create(
        procs,
        userData
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_BodyFilter_Destroy(
    filter: *mut JPH_BodyFilter
)
{
    JPH_BodyFilter_Destroy(
        filter
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_ShapeFilter_Create(
    procs: JPH_ShapeFilter_Procs,
    userData: *mut c_void
) -> *mut JPH_ShapeFilter
{
    JPH_ShapeFilter_Create(
        procs,
        userData
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_ShapeFilter_Destroy(
    filter: *mut JPH_ShapeFilter
)
{
    JPH_ShapeFilter_Destroy(
        filter
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_ShapeFilter_GetBodyID2(
    filter: *mut JPH_ShapeFilter
) -> JPH_BodyID
{
    JPH_ShapeFilter_GetBodyID2(
        filter
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_ContactListener_Create(
    procs: JPH_ContactListener_Procs,
    userData: *mut c_void
) -> *mut JPH_ContactListener
{
    JPH_ContactListener_Create(
        procs,
        userData
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_ContactListener_Destroy(
    listener: *mut JPH_ContactListener
)
{
    JPH_ContactListener_Destroy(
        listener
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_BodyActivationListener_Create(
    procs: JPH_BodyActivationListener_Procs,
    userData: *mut c_void
) -> *mut JPH_BodyActivationListener
{
    JPH_BodyActivationListener_Create(
        procs,
        userData
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_BodyActivationListener_Destroy(
    listener: *mut JPH_BodyActivationListener
)
{
    JPH_BodyActivationListener_Destroy(
        listener
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_BodyDrawFilter_Create(
    procs: JPH_BodyDrawFilter_Procs,
    userData: *mut c_void
) -> *mut JPH_BodyDrawFilter
{
    JPH_BodyDrawFilter_Create(
        procs,
        userData
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_BodyDrawFilter_Destroy(
    filter: *mut JPH_BodyDrawFilter
)
{
    JPH_BodyDrawFilter_Destroy(
        filter
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_ContactManifold_GetWorldSpaceNormal(
    manifold: *const JPH_ContactManifold,
    result: *mut JPH_Vec3
)
{
    JPH_ContactManifold_GetWorldSpaceNormal(
        manifold,
        result
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_ContactManifold_GetPenetrationDepth(
    manifold: *const JPH_ContactManifold
) -> f32
{
    JPH_ContactManifold_GetPenetrationDepth(
        manifold
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_ContactManifold_GetSubShapeID1(
    manifold: *const JPH_ContactManifold
) -> JPH_SubShapeID
{
    JPH_ContactManifold_GetSubShapeID1(
        manifold
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_ContactManifold_GetSubShapeID2(
    manifold: *const JPH_ContactManifold
) -> JPH_SubShapeID
{
    JPH_ContactManifold_GetSubShapeID2(
        manifold
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_ContactManifold_GetPointCount(
    manifold: *const JPH_ContactManifold
) -> u32
{
    JPH_ContactManifold_GetPointCount(
        manifold
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_ContactManifold_GetWorldSpaceContactPointOn1(
    manifold: *const JPH_ContactManifold,
    index: u32,
    result: *mut JPH_RVec3
)
{
    JPH_ContactManifold_GetWorldSpaceContactPointOn1(
        manifold,
        index,
        result
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_ContactManifold_GetWorldSpaceContactPointOn2(
    manifold: *const JPH_ContactManifold,
    index: u32,
    result: *mut JPH_RVec3
)
{
    JPH_ContactManifold_GetWorldSpaceContactPointOn2(
        manifold,
        index,
        result
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_ContactSettings_GetFriction(
    settings: *mut JPH_ContactSettings
) -> f32
{
    JPH_ContactSettings_GetFriction(
        settings
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_ContactSettings_SetFriction(
    settings: *mut JPH_ContactSettings,
    friction: f32
)
{
    JPH_ContactSettings_SetFriction(
        settings,
        friction
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_ContactSettings_GetRestitution(
    settings: *mut JPH_ContactSettings
) -> f32
{
    JPH_ContactSettings_GetRestitution(
        settings
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_ContactSettings_SetRestitution(
    settings: *mut JPH_ContactSettings,
    restitution: f32
)
{
    JPH_ContactSettings_SetRestitution(
        settings,
        restitution
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_ContactSettings_GetInvMassScale1(
    settings: *mut JPH_ContactSettings
) -> f32
{
    JPH_ContactSettings_GetInvMassScale1(
        settings
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_ContactSettings_SetInvMassScale1(
    settings: *mut JPH_ContactSettings,
    scale: f32
)
{
    JPH_ContactSettings_SetInvMassScale1(
        settings,
        scale
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_ContactSettings_GetInvInertiaScale1(
    settings: *mut JPH_ContactSettings
) -> f32
{
    JPH_ContactSettings_GetInvInertiaScale1(
        settings
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_ContactSettings_SetInvInertiaScale1(
    settings: *mut JPH_ContactSettings,
    scale: f32
)
{
    JPH_ContactSettings_SetInvInertiaScale1(
        settings,
        scale
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_ContactSettings_GetInvMassScale2(
    settings: *mut JPH_ContactSettings
) -> f32
{
    JPH_ContactSettings_GetInvMassScale2(
        settings
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_ContactSettings_SetInvMassScale2(
    settings: *mut JPH_ContactSettings,
    scale: f32
)
{
    JPH_ContactSettings_SetInvMassScale2(
        settings,
        scale
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_ContactSettings_GetInvInertiaScale2(
    settings: *mut JPH_ContactSettings
) -> f32
{
    JPH_ContactSettings_GetInvInertiaScale2(
        settings
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_ContactSettings_SetInvInertiaScale2(
    settings: *mut JPH_ContactSettings,
    scale: f32
)
{
    JPH_ContactSettings_SetInvInertiaScale2(
        settings,
        scale
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_ContactSettings_GetIsSensor(
    settings: *mut JPH_ContactSettings
) -> bool
{
    JPH_ContactSettings_GetIsSensor(
        settings
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_ContactSettings_SetIsSensor(
    settings: *mut JPH_ContactSettings,
    sensor: bool
)
{
    JPH_ContactSettings_SetIsSensor(
        settings,
        sensor
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_ContactSettings_GetRelativeLinearSurfaceVelocity(
    settings: *mut JPH_ContactSettings,
    result: *mut JPH_Vec3
)
{
    JPH_ContactSettings_GetRelativeLinearSurfaceVelocity(
        settings,
        result
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_ContactSettings_SetRelativeLinearSurfaceVelocity(
    settings: *mut JPH_ContactSettings,
    velocity: *mut JPH_Vec3
)
{
    JPH_ContactSettings_SetRelativeLinearSurfaceVelocity(
        settings,
        velocity
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_ContactSettings_GetRelativeAngularSurfaceVelocity(
    settings: *mut JPH_ContactSettings,
    result: *mut JPH_Vec3
)
{
    JPH_ContactSettings_GetRelativeAngularSurfaceVelocity(
        settings,
        result
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_ContactSettings_SetRelativeAngularSurfaceVelocity(
    settings: *mut JPH_ContactSettings,
    velocity: *mut JPH_Vec3
)
{
    JPH_ContactSettings_SetRelativeAngularSurfaceVelocity(
        settings,
        velocity
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_CharacterBase_Destroy(
    character: *mut JPH_CharacterBase
)
{
    JPH_CharacterBase_Destroy(
        character
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_CharacterBase_GetCosMaxSlopeAngle(
    character: *mut JPH_CharacterBase
) -> f32
{
    JPH_CharacterBase_GetCosMaxSlopeAngle(
        character
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_CharacterBase_SetMaxSlopeAngle(
    character: *mut JPH_CharacterBase,
    maxSlopeAngle: f32
)
{
    JPH_CharacterBase_SetMaxSlopeAngle(
        character,
        maxSlopeAngle
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_CharacterBase_GetUp(
    character: *mut JPH_CharacterBase,
    result: *mut JPH_Vec3
)
{
    JPH_CharacterBase_GetUp(
        character,
        result
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_CharacterBase_SetUp(
    character: *mut JPH_CharacterBase,
    value: *const JPH_Vec3
)
{
    JPH_CharacterBase_SetUp(
        character,
        value
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_CharacterBase_IsSlopeTooSteep(
    character: *mut JPH_CharacterBase,
    value: *const JPH_Vec3
) -> bool
{
    JPH_CharacterBase_IsSlopeTooSteep(
        character,
        value
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_CharacterBase_GetShape(
    character: *mut JPH_CharacterBase
) -> *const JPH_Shape
{
    JPH_CharacterBase_GetShape(
        character
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_CharacterBase_GetGroundState(
    character: *mut JPH_CharacterBase
) -> JPH_GroundState
{
    JPH_CharacterBase_GetGroundState(
        character
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_CharacterBase_IsSupported(
    character: *mut JPH_CharacterBase
) -> bool
{
    JPH_CharacterBase_IsSupported(
        character
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_CharacterBase_GetGroundPosition(
    character: *mut JPH_CharacterBase,
    position: *mut JPH_RVec3
)
{
    JPH_CharacterBase_GetGroundPosition(
        character,
        position
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_CharacterBase_GetGroundNormal(
    character: *mut JPH_CharacterBase,
    normal: *mut JPH_Vec3
)
{
    JPH_CharacterBase_GetGroundNormal(
        character,
        normal
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_CharacterBase_GetGroundVelocity(
    character: *mut JPH_CharacterBase,
    velocity: *mut JPH_Vec3
)
{
    JPH_CharacterBase_GetGroundVelocity(
        character,
        velocity
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_CharacterBase_GetGroundMaterial(
    character: *mut JPH_CharacterBase
) -> *const JPH_PhysicsMaterial
{
    JPH_CharacterBase_GetGroundMaterial(
        character
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_CharacterBase_GetGroundBodyId(
    character: *mut JPH_CharacterBase
) -> JPH_BodyID
{
    JPH_CharacterBase_GetGroundBodyId(
        character
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_CharacterBase_GetGroundSubShapeId(
    character: *mut JPH_CharacterBase
) -> JPH_SubShapeID
{
    JPH_CharacterBase_GetGroundSubShapeId(
        character
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_CharacterBase_GetGroundUserData(
    character: *mut JPH_CharacterBase
) -> u64
{
    JPH_CharacterBase_GetGroundUserData(
        character
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_CharacterSettings_Init(
    settings: *mut JPH_CharacterSettings
)
{
    JPH_CharacterSettings_Init(
        settings
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_Character_Create(
    settings: *const JPH_CharacterSettings,
    position: *const JPH_RVec3,
    rotation: *const JPH_Quat,
    userData: u64,
    system: *mut JPH_PhysicsSystem
) -> *mut JPH_Character
{
    JPH_Character_Create(
        settings,
        position,
        rotation,
        userData,
        system
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_Character_AddToPhysicsSystem(
    character: *mut JPH_Character,
    activationMode: JPH_Activation,
    lockBodies: bool
)
{
    JPH_Character_AddToPhysicsSystem(
        character,
        activationMode,
        lockBodies
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_Character_RemoveFromPhysicsSystem(
    character: *mut JPH_Character,
    lockBodies: bool
)
{
    JPH_Character_RemoveFromPhysicsSystem(
        character,
        lockBodies
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_Character_Activate(
    character: *mut JPH_Character,
    lockBodies: bool
)
{
    JPH_Character_Activate(
        character,
        lockBodies
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_Character_PostSimulation(
    character: *mut JPH_Character,
    maxSeparationDistance: f32,
    lockBodies: bool
)
{
    JPH_Character_PostSimulation(
        character,
        maxSeparationDistance,
        lockBodies
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_CharacterVirtualSettings_Init(
    settings: *mut JPH_CharacterVirtualSettings
)
{
    JPH_CharacterVirtualSettings_Init(
        settings
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_CharacterVirtual_Create(
    settings: *const JPH_CharacterVirtualSettings,
    position: *const JPH_RVec3,
    rotation: *const JPH_Quat,
    userData: u64,
    system: *mut JPH_PhysicsSystem
) -> *mut JPH_CharacterVirtual
{
    JPH_CharacterVirtual_Create(
        settings,
        position,
        rotation,
        userData,
        system
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_CharacterVirtual_SetListener(
    character: *mut JPH_CharacterVirtual,
    listener: *mut JPH_CharacterContactListener
)
{
    JPH_CharacterVirtual_SetListener(
        character,
        listener
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_CharacterVirtual_GetLinearVelocity(
    character: *mut JPH_CharacterVirtual,
    velocity: *mut JPH_Vec3
)
{
    JPH_CharacterVirtual_GetLinearVelocity(
        character,
        velocity
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_CharacterVirtual_SetLinearVelocity(
    character: *mut JPH_CharacterVirtual,
    velocity: *const JPH_Vec3
)
{
    JPH_CharacterVirtual_SetLinearVelocity(
        character,
        velocity
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_CharacterVirtual_GetPosition(
    character: *mut JPH_CharacterVirtual,
    position: *mut JPH_RVec3
)
{
    JPH_CharacterVirtual_GetPosition(
        character,
        position
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_CharacterVirtual_SetPosition(
    character: *mut JPH_CharacterVirtual,
    position: *const JPH_RVec3
)
{
    JPH_CharacterVirtual_SetPosition(
        character,
        position
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_CharacterVirtual_GetRotation(
    character: *mut JPH_CharacterVirtual,
    rotation: *mut JPH_Quat
)
{
    JPH_CharacterVirtual_GetRotation(
        character,
        rotation
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_CharacterVirtual_SetRotation(
    character: *mut JPH_CharacterVirtual,
    rotation: *const JPH_Quat
)
{
    JPH_CharacterVirtual_SetRotation(
        character,
        rotation
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_CharacterVirtual_GetWorldTransform(
    character: *mut JPH_CharacterVirtual,
    result: *mut JPH_RMatrix4x4
)
{
    JPH_CharacterVirtual_GetWorldTransform(
        character,
        result
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_CharacterVirtual_GetCenterOfMassTransform(
    character: *mut JPH_CharacterVirtual,
    result: *mut JPH_RMatrix4x4
)
{
    JPH_CharacterVirtual_GetCenterOfMassTransform(
        character,
        result
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_CharacterVirtual_GetMass(
    character: *mut JPH_CharacterVirtual
) -> f32
{
    JPH_CharacterVirtual_GetMass(
        character
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_CharacterVirtual_SetMass(
    character: *mut JPH_CharacterVirtual,
    value: f32
)
{
    JPH_CharacterVirtual_SetMass(
        character,
        value
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_CharacterVirtual_GetMaxStrength(
    character: *mut JPH_CharacterVirtual
) -> f32
{
    JPH_CharacterVirtual_GetMaxStrength(
        character
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_CharacterVirtual_SetMaxStrength(
    character: *mut JPH_CharacterVirtual,
    value: f32
)
{
    JPH_CharacterVirtual_SetMaxStrength(
        character,
        value
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_CharacterVirtual_GetPenetrationRecoverySpeed(
    character: *mut JPH_CharacterVirtual
) -> f32
{
    JPH_CharacterVirtual_GetPenetrationRecoverySpeed(
        character
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_CharacterVirtual_SetPenetrationRecoverySpeed(
    character: *mut JPH_CharacterVirtual,
    value: f32
)
{
    JPH_CharacterVirtual_SetPenetrationRecoverySpeed(
        character,
        value
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_CharacterVirtual_GetEnhancedInternalEdgeRemoval(
    character: *mut JPH_CharacterVirtual
) -> bool
{
    JPH_CharacterVirtual_GetEnhancedInternalEdgeRemoval(
        character
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_CharacterVirtual_SetEnhancedInternalEdgeRemoval(
    character: *mut JPH_CharacterVirtual,
    value: bool
)
{
    JPH_CharacterVirtual_SetEnhancedInternalEdgeRemoval(
        character,
        value
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_CharacterVirtual_GetCharacterPadding(
    character: *mut JPH_CharacterVirtual
) -> f32
{
    JPH_CharacterVirtual_GetCharacterPadding(
        character
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_CharacterVirtual_GetMaxNumHits(
    character: *mut JPH_CharacterVirtual
) -> u32
{
    JPH_CharacterVirtual_GetMaxNumHits(
        character
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_CharacterVirtual_SetMaxNumHits(
    character: *mut JPH_CharacterVirtual,
    value: u32
)
{
    JPH_CharacterVirtual_SetMaxNumHits(
        character,
        value
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_CharacterVirtual_GetHitReductionCosMaxAngle(
    character: *mut JPH_CharacterVirtual
) -> f32
{
    JPH_CharacterVirtual_GetHitReductionCosMaxAngle(
        character
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_CharacterVirtual_SetHitReductionCosMaxAngle(
    character: *mut JPH_CharacterVirtual,
    value: f32
)
{
    JPH_CharacterVirtual_SetHitReductionCosMaxAngle(
        character,
        value
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_CharacterVirtual_GetMaxHitsExceeded(
    character: *mut JPH_CharacterVirtual
) -> bool
{
    JPH_CharacterVirtual_GetMaxHitsExceeded(
        character
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_CharacterVirtual_GetUserData(
    character: *mut JPH_CharacterVirtual
) -> u64
{
    JPH_CharacterVirtual_GetUserData(
        character
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_CharacterVirtual_SetUserData(
    character: *mut JPH_CharacterVirtual,
    value: u64
)
{
    JPH_CharacterVirtual_SetUserData(
        character,
        value
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_CharacterVirtual_CancelVelocityTowardsSteepSlopes(
    character: *mut JPH_CharacterVirtual,
    desiredVelocity: *const JPH_Vec3,
    velocity: *mut JPH_Vec3
)
{
    JPH_CharacterVirtual_CancelVelocityTowardsSteepSlopes(
        character,
        desiredVelocity,
        velocity
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_CharacterVirtual_Update(
    character: *mut JPH_CharacterVirtual,
    deltaTime: f32,
    layer: JPH_ObjectLayer,
    system: *mut JPH_PhysicsSystem
)
{
    JPH_CharacterVirtual_Update(
        character,
        deltaTime,
        layer,
        system
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_CharacterVirtual_ExtendedUpdate(
    character: *mut JPH_CharacterVirtual,
    deltaTime: f32,
    settings: *const JPH_ExtendedUpdateSettings,
    layer: JPH_ObjectLayer,
    system: *mut JPH_PhysicsSystem
)
{
    JPH_CharacterVirtual_ExtendedUpdate(
        character,
        deltaTime,
        settings,
        layer,
        system
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_CharacterVirtual_RefreshContacts(
    character: *mut JPH_CharacterVirtual,
    layer: JPH_ObjectLayer,
    system: *mut JPH_PhysicsSystem
)
{
    JPH_CharacterVirtual_RefreshContacts(
        character,
        layer,
        system
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_CharacterContactListener_Create(
    procs: JPH_CharacterContactListener_Procs,
    userData: *mut c_void
) -> *mut JPH_CharacterContactListener
{
    JPH_CharacterContactListener_Create(
        procs,
        userData
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_CharacterContactListener_Destroy(
    listener: *mut JPH_CharacterContactListener
)
{
    JPH_CharacterContactListener_Destroy(
        listener
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_DebugRenderer_Create(
    procs: JPH_DebugRenderer_Procs,
    userData: *mut c_void
) -> *mut JPH_DebugRenderer
{
    JPH_DebugRenderer_Create(
        procs,
        userData
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_DebugRenderer_Destroy(
    renderer: *mut JPH_DebugRenderer
)
{
    JPH_DebugRenderer_Destroy(
        renderer
    )
}

#[no_mangle]
pub unsafe extern "C" fn jpc_JPH_DebugRenderer_NextFrame(
    renderer: *mut JPH_DebugRenderer
)
{
    JPH_DebugRenderer_NextFrame(
        renderer
    )
}

    